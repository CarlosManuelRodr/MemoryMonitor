(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     51517,        890]
NotebookOptionsPosition[     51077,        870]
NotebookOutlinePosition[     51497,        889]
CellTagsIndexPosition[     51454,        886]
WindowTitle->Memory Monitor
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 TabViewBox[{{1,"\<\"Memory monitor\"\>"->
  PanelBox[
   TemplateBox[{TagBox[
      GridBox[{{
         ItemBox[
          StyleBox[
          "\"Kernel memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{62, 102.67910766601562`}, {
             63, 102.67910766601562`}, {64, 102.67910766601562`}, {
             65, 102.67910766601562`}, {66, 102.67910766601562`}, {
             67, 102.67910766601562`}, {68, 102.67910766601562`}, {
             69, 102.67910766601562`}, {70, 102.67910766601562`}, {
             71, 102.67910766601562`}, {72, 102.67910766601562`}, {
             73, 102.67910766601562`}, {74, 102.67910766601562`}, {
             75, 102.67910766601562`}, {76, 102.67910766601562`}, {
             77, 102.67910766601562`}, {78, 102.67910766601562`}, {
             79, 102.67910766601562`}, {80, 102.67910766601562`}, {
             81, 102.67910766601562`}, {82, 102.67910766601562`}, {
             83, 102.67910766601562`}, {84, 102.67910766601562`}, {
             85, 102.67910766601562`}, {86, 102.67910766601562`}, {
             87, 102.67910766601562`}, {88, 102.67910766601562`}, {
             89, 102.67910766601562`}, {90, 102.67910766601562`}, {
             91, 102.67910766601562`}, {92, 102.67910766601562`}, {
             93, 102.67910766601562`}, {94, 102.67910766601562`}, {
             95, 102.67910766601562`}, {96, 102.67910766601562`}, {
             97, 102.67910766601562`}, {98, 102.67910766601562`}, {
             99, 102.67910766601562`}, {100, 102.67910766601562`}, {
             101, 102.67910766601562`}, {102, 102.67910766601562`}, {
             103, 102.67910766601562`}, {104, 102.67910766601562`}, {
             105, 102.67910766601562`}, {106, 102.67910766601562`}, {
             107, 102.67910766601562`}, {108, 102.67910766601562`}, {
             109, 102.67910766601562`}, {110, 102.67910766601562`}, {
             111, 102.67910766601562`}, {112, 102.67910766601562`}, {
             113, 102.67910766601562`}, {114, 102.67910766601562`}, {
             115, 102.67910766601562`}, {116, 102.67910766601562`}, {
             117, 102.67910766601562`}, {118, 102.67910766601562`}, {
             119, 102.67910766601562`}, {120, 102.67910766601562`}, {
             121, 102.67910766601562`}, {122, 102.67910766601562`}, {
             123, 102.67910766601562`}, {124, 102.67910766601562`}, {
             125, 102.67910766601562`}, {126, 102.67910766601562`}, {
             127, 102.67910766601562`}, {128, 102.67910766601562`}, {
             129, 102.67910766601562`}, {130, 102.67910766601562`}, {
             131, 102.67910766601562`}, {132, 102.67910766601562`}, {
             133, 102.67910766601562`}, {134, 102.67910766601562`}, {
             135, 102.67910766601562`}, {136, 102.67910766601562`}, {
             137, 102.67910766601562`}, {138, 102.67910766601562`}, {
             139, 102.67910766601562`}, {140, 102.67910766601562`}, {
             141, 102.67910766601562`}, {142, 102.67910766601562`}, {
             143, 102.67910766601562`}, {144, 102.67910766601562`}, {
             145, 102.67910766601562`}, {146, 102.67910766601562`}, {
             147, 102.67910766601562`}, {148, 102.67910766601562`}, {
             149, 102.67910766601562`}, {150, 102.67910766601562`}, {
             151, 102.67910766601562`}, {152, 102.67910766601562`}, {
             153, 102.67910766601562`}, {154, 102.67910766601562`}, {
             155, 102.67910766601562`}, {156, 102.67910766601562`}, {
             157, 102.67910766601562`}, {158, 102.67910766601562`}, {
             159, 102.67910766601562`}, {160, 102.67910766601562`}, {
             161, 102.67910766601562`}, {162, 102.67910766601562`}, {
             163, 102.67910766601562`}, {164, 102.67910766601562`}, {
             165, 102.67910766601562`}, {166, 102.67910766601562`}, {
             167, 102.67910766601562`}, {168, 102.67910766601562`}, {
             169, 102.67910766601562`}, {170, 102.67910766601562`}, {
             171, 102.67910766601562`}, {172, 102.67910766601562`}, {
             173, 102.67910766601562`}, {174, 102.67910766601562`}, {
             175, 102.67910766601562`}, {176, 102.67910766601562`}, {
             177, 102.67910766601562`}, {178, 102.67910766601562`}, {
             179, 102.67910766601562`}, {180, 102.67910766601562`}, {
             181, 102.67910766601562`}, {182, 102.67910766601562`}, {
             183, 102.67910766601562`}, {184, 102.67910766601562`}, {
             185, 102.67910766601562`}, {186, 102.67910766601562`}, {
             187, 102.67910766601562`}, {188, 102.67910766601562`}, {
             189, 102.67910766601562`}, {190, 102.67910766601562`}, {
             191, 102.67910766601562`}, {192, 102.67910766601562`}, {
             193, 102.67910766601562`}, {194, 102.67910766601562`}, {
             195, 102.67910766601562`}, {196, 102.67910766601562`}, {
             197, 102.67910766601562`}, {198, 102.67910766601562`}, {
             199, 102.67910766601562`}, {200, 102.67910766601562`}, {
             201, 102.67910766601562`}, {202, 102.67910766601562`}, {
             203, 102.67910766601562`}, {204, 102.67910766601562`}, {
             205, 102.67910766601562`}, {206, 102.67910766601562`}, {
             207, 102.67910766601562`}, {208, 102.67910766601562`}, {
             209, 102.67910766601562`}, {210, 102.67910766601562`}, {
             211, 102.67910766601562`}, {212, 102.67910766601562`}, {
             213, 102.67910766601562`}, {214, 102.67910766601562`}, {
             215, 102.67910766601562`}, {216, 102.67910766601562`}, {
             217, 102.67910766601562`}, {218, 102.67910766601562`}, {
             219, 102.67910766601562`}, {220, 102.67910766601562`}, {
             221, 102.67910766601562`}, {222, 102.67910766601562`}, {
             223, 102.67910766601562`}, {224, 102.67910766601562`}, {
             225, 102.67910766601562`}, {226, 102.67910766601562`}, {
             227, 102.67910766601562`}, {228, 102.67910766601562`}, {
             229, 102.67910766601562`}, {230, 102.67910766601562`}, {
             231, 102.67910766601562`}, {232, 102.67910766601562`}, {
             233, 102.67910766601562`}, {234, 102.67910766601562`}, {
             235, 102.67910766601562`}, {236, 102.67910766601562`}, {
             237, 102.67910766601562`}, {238, 102.67910766601562`}, {
             239, 102.67910766601562`}, {240, 102.67910766601562`}, {
             241, 102.67910766601562`}, {242, 102.67910766601562`}, {
             243, 102.67910766601562`}, {244, 102.67910766601562`}, {
             245, 102.67910766601562`}, {246, 102.67910766601562`}, {
             247, 102.67910766601562`}, {248, 102.67910766601562`}, {
             249, 102.67910766601562`}, {250, 102.67910766601562`}, {
             251, 102.67910766601562`}, {252, 102.67910766601562`}, {
             253, 102.67910766601562`}, {254, 102.67910766601562`}, {
             255, 102.67910766601562`}, {256, 102.67910766601562`}, {
             257, 102.67910766601562`}, {258, 102.67910766601562`}, {
             259, 102.67910766601562`}, {260, 102.67910766601562`}, {
             261, 102.67910766601562`}, {262, 102.67910766601562`}, {
             263, 102.67910766601562`}, {264, 102.67910766601562`}, {
             265, 102.67910766601562`}, {266, 102.67910766601562`}, {
             267, 102.67910766601562`}, {268, 102.67910766601562`}, {
             269, 102.67910766601562`}, {270, 102.67910766601562`}, {
             271, 102.67910766601562`}, {272, 102.67910766601562`}, {
             273, 102.67910766601562`}, {274, 102.67910766601562`}, {
             275, 102.67910766601562`}, {276, 102.67910766601562`}, {
             277, 102.67910766601562`}, {278, 102.67910766601562`}, {
             279, 102.67910766601562`}, {280, 102.67910766601562`}, {
             281, 102.67910766601562`}, {282, 102.67910766601562`}, {
             283, 102.67910766601562`}, {284, 102.67910766601562`}, {
             285, 102.67910766601562`}, {286, 102.67910766601562`}, {
             287, 102.67910766601562`}, {288, 102.67910766601562`}, {
             289, 102.67910766601562`}, {290, 102.67910766601562`}, {
             291, 102.67910766601562`}, {292, 102.67910766601562`}, {
             293, 102.67910766601562`}, {294, 102.67910766601562`}, {
             295, 102.67910766601562`}, {296, 102.67910766601562`}, {
             297, 102.67910766601562`}, {298, 102.67910766601562`}, {
             299, 102.67910766601562`}, {300, 102.67910766601562`}, {
             301, 102.67910766601562`}, {302, 102.67910766601562`}, {
             303, 102.67910766601562`}, {304, 102.67910766601562`}, {
             305, 102.67910766601562`}, {306, 102.67910766601562`}, {
             307, 102.67910766601562`}, {308, 102.67910766601562`}, {
             309, 102.67910766601562`}, {310, 102.67910766601562`}, {
             311, 102.67910766601562`}, {312, 102.67910766601562`}, {
             313, 102.67910766601562`}, {314, 102.67910766601562`}, {
             315, 102.67910766601562`}, {316, 102.67910766601562`}, {
             317, 102.67910766601562`}, {318, 102.67910766601562`}, {
             319, 102.67910766601562`}, {320, 102.67910766601562`}, {
             321, 102.67910766601562`}, {322, 102.67910766601562`}, {
             323, 102.67910766601562`}, {324, 102.67910766601562`}, {
             325, 102.67910766601562`}, {326, 102.67910766601562`}, {
             327, 102.67910766601562`}, {328, 102.67910766601562`}, {
             329, 102.67910766601562`}, {330, 102.67910766601562`}, {
             331, 102.67910766601562`}, {332, 102.67910766601562`}, {
             333, 102.67910766601562`}, {334, 102.67910766601562`}, {
             335, 102.67910766601562`}, {336, 102.67910766601562`}, {
             337, 102.67910766601562`}, {338, 102.67910766601562`}, {
             339, 102.67910766601562`}, {340, 102.67910766601562`}, {
             341, 102.67910766601562`}, {342, 102.67910766601562`}, {
             343, 102.67910766601562`}, {344, 102.67910766601562`}, {
             345, 102.67910766601562`}, {346, 102.67910766601562`}, {
             347, 102.67910766601562`}, {348, 102.67910766601562`}, {
             349, 102.67910766601562`}, {350, 102.67910766601562`}, {
             351, 102.67910766601562`}, {352, 102.67910766601562`}, {
             353, 102.67910766601562`}, {354, 102.67910766601562`}, {
             355, 102.67910766601562`}, {356, 102.67910766601562`}, {
             357, 102.67910766601562`}, {358, 102.67910766601562`}, {
             359, 102.67910766601562`}, {360, 102.67910766601562`}, {
             361, 102.67910766601562`}, {362, 102.67910766601562`}, {
             363, 102.67910766601562`}, {364, 102.67910766601562`}, {
             365, 102.67910766601562`}, {366, 102.67910766601562`}, {
             367, 102.67910766601562`}, {368, 102.67910766601562`}, {
             369, 102.67910766601562`}, {370, 102.67910766601562`}, {
             371, 102.67910766601562`}, {372, 102.67910766601562`}, {
             373, 102.67910766601562`}, {374, 102.67910766601562`}, {
             375, 102.67910766601562`}, {376, 102.67910766601562`}, {
             377, 102.67910766601562`}, {378, 102.67910766601562`}, {
             379, 102.67910766601562`}, {380, 102.67910766601562`}, {
             381, 102.67910766601562`}, {382, 102.67910766601562`}, {
             383, 102.67910766601562`}, {384, 102.67910766601562`}, {
             385, 102.67910766601562`}, {386, 102.67910766601562`}, {
             387, 102.67910766601562`}, {388, 102.67910766601562`}, {
             389, 102.67910766601562`}, {390, 102.67910766601562`}, {
             391, 102.67910766601562`}, {392, 102.67910766601562`}, {
             393, 102.67910766601562`}, {394, 102.67910766601562`}, {
             395, 102.67910766601562`}, {396, 102.67910766601562`}, {
             397, 102.67910766601562`}, {398, 102.67910766601562`}, {
             399, 102.67910766601562`}, {400, 102.67910766601562`}, {
             401, 102.67910766601562`}, {402, 102.67910766601562`}, {
             403, 102.67910766601562`}, {404, 102.67910766601562`}, {
             405, 102.67910766601562`}, {406, 102.67910766601562`}, {
             407, 102.67910766601562`}, {408, 102.67910766601562`}, {
             409, 102.67910766601562`}, {410, 102.67910766601562`}, {
             411, 102.67910766601562`}, {412, 102.67910766601562`}, {
             413, 102.67910766601562`}, {414, 102.67910766601562`}, {
             415, 102.67910766601562`}, {416, 102.67910766601562`}, {
             417, 102.67910766601562`}, {418, 102.67910766601562`}, {
             419, 102.67910766601562`}, {420, 102.67910766601562`}, {
             421, 102.67910766601562`}, {422, 102.67910766601562`}, {
             423, 102.67910766601562`}, {424, 102.67910766601562`}, {
             425, 102.67910766601562`}, {426, 102.67910766601562`}, {
             427, 102.67910766601562`}, {428, 102.67910766601562`}, {
             429, 102.67910766601562`}, {430, 102.67910766601562`}, {
             431, 102.67910766601562`}, {432, 102.67910766601562`}, {
             433, 102.67910766601562`}, {434, 102.67910766601562`}, {
             435, 102.67910766601562`}, {436, 102.67910766601562`}, {
             437, 102.67910766601562`}, {438, 102.67910766601562`}, {
             439, 102.67910766601562`}, {440, 102.67910766601562`}, {
             441, 102.67910766601562`}, {442, 102.67910766601562`}, {
             443, 102.67910766601562`}, {444, 102.67910766601562`}, {
             445, 102.67910766601562`}, {446, 102.67910766601562`}, {
             447, 102.67910766601562`}, {448, 102.67910766601562`}, {
             449, 102.67910766601562`}, {450, 102.67910766601562`}, {
             451, 102.67910766601562`}, {452, 102.67910766601562`}, {
             453, 102.67910766601562`}, {454, 102.67910766601562`}, {
             455, 102.67910766601562`}, {456, 102.67910766601562`}, {
             457, 102.67910766601562`}, {458, 102.67910766601562`}, {
             459, 102.67910766601562`}, {460, 102.67910766601562`}, {
             461, 102.67910766601562`}, {462, 102.67910766601562`}, {
             463, 102.67910766601562`}, {464, 102.67910766601562`}, {
             465, 102.67910766601562`}, {466, 102.67910766601562`}, {
             467, 102.67910766601562`}, {468, 102.67910766601562`}, {
             469, 102.67910766601562`}, {470, 102.67910766601562`}, {
             471, 102.67910766601562`}, {472, 102.67910766601562`}, {
             473, 102.67910766601562`}, {474, 102.67910766601562`}, {
             475, 102.67910766601562`}, {476, 102.67910766601562`}, {
             477, 102.67910766601562`}, {478, 102.67910766601562`}, {
             479, 102.67910766601562`}, {480, 102.67910766601562`}, {
             481, 102.67910766601562`}, {482, 102.67910766601562`}, {
             483, 102.67910766601562`}, {484, 102.67910766601562`}, {
             485, 102.67910766601562`}, {486, 102.67910766601562`}, {
             487, 102.67910766601562`}, {488, 102.67910766601562`}, {
             489, 102.67910766601562`}, {490, 102.67910766601562`}, {
             491, 102.67910766601562`}, {492, 102.67910766601562`}, {
             493, 102.67910766601562`}, {494, 102.67910766601562`}, {
             495, 102.67910766601562`}, {496, 102.67910766601562`}, {
             497, 102.67910766601562`}, {498, 102.67910766601562`}, {
             499, 102.67910766601562`}, {500, 102.67910766601562`}, {
             501, 102.68780517578125`}, {502, 120.95416259765625`}, {
             503, 120.96211242675781`}, {504, 120.9308090209961}, {
             505, 117.22904968261719`}, {506, 122.05968475341797`}, {
             507, 122.06018829345703`}, {508, 122.0606918334961}, {
             509, 122.06119537353516`}, {510, 122.06169891357422`}, {
             511, 122.06220245361328`}, {512, 122.06270599365234`}, {
             513, 122.0632095336914}, {514, 122.06371307373047`}, {
             515, 122.0989761352539}, {516, 122.09947967529297`}, {
             517, 122.09998321533203`}, {518, 122.1004867553711}, {
             519, 122.10099029541016`}, {520, 122.10149383544922`}, {
             521, 122.10199737548828`}, {522, 122.10250091552734`}, {
             523, 122.06819915771484`}, {524, 122.1034164428711}, {
             525, 122.0691146850586}, {526, 122.06957244873047`}, {
             527, 122.1048355102539}, {528, 122.10533905029297`}, {
             529, 122.10584259033203`}, {530, 122.1063461303711}, {
             531, 122.10684967041016`}, {532, 122.10735321044922`}, {
             533, 122.07305145263672`}, {534, 122.07355499267578`}, {
             535, 122.11444854736328`}, {536, 122.11287689208984`}, {
             537, 122.0816650390625}, {538, 122.12532806396484`}, {
             539, 122.12105560302734`}, {540, 122.1215591430664}, {
             541, 122.12206268310547`}, {542, 122.12256622314453`}, {
             543, 122.1230697631836}, {544, 122.12357330322266`}, {
             545, 122.12407684326172`}, {546, 122.12458038330078`}, {
             547, 122.12508392333984`}, {548, 122.1255874633789}, {
             549, 122.16016387939453`}, {550, 122.1606674194336}, {
             551, 122.1270523071289}, {552, 122.12751007080078`}, {
             553, 122.12796783447266`}, {554, 122.12842559814453`}, {
             555, 122.1288833618164}, {556, 122.12938690185547`}, {
             557, 122.1639633178711}, {558, 122.16446685791016`}, {
             559, 122.16492462158203`}, {560, 122.13130950927734`}, {
             561, 122.1318130493164}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, MemoryInUse[]/
                    1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {95., 98.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}, {"\"\""}, {
         ItemBox[
          StyleBox[
          "\"Frontend memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{62, 0.135589599609375}, {
             63, 0.135589599609375}, {64, 0.135589599609375}, {
             65, 0.135589599609375}, {66, 0.135589599609375}, {
             67, 0.135589599609375}, {68, 0.135589599609375}, {
             69, 0.135589599609375}, {70, 0.135589599609375}, {
             71, 0.135589599609375}, {72, 0.135589599609375}, {
             73, 0.135589599609375}, {74, 0.135589599609375}, {
             75, 0.135589599609375}, {76, 0.135589599609375}, {
             77, 0.135589599609375}, {78, 0.135589599609375}, {
             79, 0.135589599609375}, {80, 0.135589599609375}, {
             81, 0.135589599609375}, {82, 0.135589599609375}, {
             83, 0.135589599609375}, {84, 0.135589599609375}, {
             85, 0.135589599609375}, {86, 0.135589599609375}, {
             87, 0.135589599609375}, {88, 0.135589599609375}, {
             89, 0.135589599609375}, {90, 0.135589599609375}, {
             91, 0.135589599609375}, {92, 0.135589599609375}, {
             93, 0.135589599609375}, {94, 0.135589599609375}, {
             95, 0.135589599609375}, {96, 0.135589599609375}, {
             97, 0.135589599609375}, {98, 0.135589599609375}, {
             99, 0.135589599609375}, {100, 0.135589599609375}, {
             101, 0.135589599609375}, {102, 0.135589599609375}, {
             103, 0.135589599609375}, {104, 0.135589599609375}, {
             105, 0.135589599609375}, {106, 0.135589599609375}, {
             107, 0.135589599609375}, {108, 0.135589599609375}, {
             109, 0.135589599609375}, {110, 0.135589599609375}, {
             111, 0.135589599609375}, {112, 0.135589599609375}, {
             113, 0.135589599609375}, {114, 0.135589599609375}, {
             115, 0.135589599609375}, {116, 0.135589599609375}, {
             117, 0.135589599609375}, {118, 0.135589599609375}, {
             119, 0.135589599609375}, {120, 0.135589599609375}, {
             121, 0.135589599609375}, {122, 0.135589599609375}, {
             123, 0.135589599609375}, {124, 0.135589599609375}, {
             125, 0.135589599609375}, {126, 0.135589599609375}, {
             127, 0.135589599609375}, {128, 0.135589599609375}, {
             129, 0.135589599609375}, {130, 0.135589599609375}, {
             131, 0.135589599609375}, {132, 0.135589599609375}, {
             133, 0.135589599609375}, {134, 0.135589599609375}, {
             135, 0.135589599609375}, {136, 0.135589599609375}, {
             137, 0.135589599609375}, {138, 0.135589599609375}, {
             139, 0.135589599609375}, {140, 0.135589599609375}, {
             141, 0.135589599609375}, {142, 0.135589599609375}, {
             143, 0.135589599609375}, {144, 0.135589599609375}, {
             145, 0.135589599609375}, {146, 0.135589599609375}, {
             147, 0.135589599609375}, {148, 0.135589599609375}, {
             149, 0.135589599609375}, {150, 0.135589599609375}, {
             151, 0.135589599609375}, {152, 0.135589599609375}, {
             153, 0.135589599609375}, {154, 0.135589599609375}, {
             155, 0.135589599609375}, {156, 0.135589599609375}, {
             157, 0.135589599609375}, {158, 0.135589599609375}, {
             159, 0.135589599609375}, {160, 0.135589599609375}, {
             161, 0.135589599609375}, {162, 0.135589599609375}, {
             163, 0.135589599609375}, {164, 0.135589599609375}, {
             165, 0.135589599609375}, {166, 0.135589599609375}, {
             167, 0.135589599609375}, {168, 0.135589599609375}, {
             169, 0.135589599609375}, {170, 0.135589599609375}, {
             171, 0.135589599609375}, {172, 0.135589599609375}, {
             173, 0.135589599609375}, {174, 0.135589599609375}, {
             175, 0.135589599609375}, {176, 0.135589599609375}, {
             177, 0.135589599609375}, {178, 0.135589599609375}, {
             179, 0.135589599609375}, {180, 0.135589599609375}, {
             181, 0.135589599609375}, {182, 0.135589599609375}, {
             183, 0.135589599609375}, {184, 0.135589599609375}, {
             185, 0.135589599609375}, {186, 0.135589599609375}, {
             187, 0.135589599609375}, {188, 0.135589599609375}, {
             189, 0.135589599609375}, {190, 0.135589599609375}, {
             191, 0.135589599609375}, {192, 0.135589599609375}, {
             193, 0.135589599609375}, {194, 0.135589599609375}, {
             195, 0.135589599609375}, {196, 0.135589599609375}, {
             197, 0.135589599609375}, {198, 0.135589599609375}, {
             199, 0.135589599609375}, {200, 0.135589599609375}, {
             201, 0.135589599609375}, {202, 0.135589599609375}, {
             203, 0.135589599609375}, {204, 0.135589599609375}, {
             205, 0.135589599609375}, {206, 0.135589599609375}, {
             207, 0.135589599609375}, {208, 0.135589599609375}, {
             209, 0.135589599609375}, {210, 0.135589599609375}, {
             211, 0.135589599609375}, {212, 0.135589599609375}, {
             213, 0.135589599609375}, {214, 0.135589599609375}, {
             215, 0.135589599609375}, {216, 0.135589599609375}, {
             217, 0.135589599609375}, {218, 0.135589599609375}, {
             219, 0.135589599609375}, {220, 0.135589599609375}, {
             221, 0.135589599609375}, {222, 0.135589599609375}, {
             223, 0.135589599609375}, {224, 0.135589599609375}, {
             225, 0.135589599609375}, {226, 0.135589599609375}, {
             227, 0.135589599609375}, {228, 0.135589599609375}, {
             229, 0.135589599609375}, {230, 0.135589599609375}, {
             231, 0.135589599609375}, {232, 0.135589599609375}, {
             233, 0.135589599609375}, {234, 0.135589599609375}, {
             235, 0.135589599609375}, {236, 0.135589599609375}, {
             237, 0.135589599609375}, {238, 0.135589599609375}, {
             239, 0.135589599609375}, {240, 0.135589599609375}, {
             241, 0.135589599609375}, {242, 0.135589599609375}, {
             243, 0.135589599609375}, {244, 0.135589599609375}, {
             245, 0.135589599609375}, {246, 0.135589599609375}, {
             247, 0.135589599609375}, {248, 0.135589599609375}, {
             249, 0.135589599609375}, {250, 0.135589599609375}, {
             251, 0.135589599609375}, {252, 0.135589599609375}, {
             253, 0.135589599609375}, {254, 0.135589599609375}, {
             255, 0.135589599609375}, {256, 0.135589599609375}, {
             257, 0.135589599609375}, {258, 0.135589599609375}, {
             259, 0.135589599609375}, {260, 0.135589599609375}, {
             261, 0.135589599609375}, {262, 0.135589599609375}, {
             263, 0.135589599609375}, {264, 0.135589599609375}, {
             265, 0.135589599609375}, {266, 0.135589599609375}, {
             267, 0.135589599609375}, {268, 0.135589599609375}, {
             269, 0.135589599609375}, {270, 0.135589599609375}, {
             271, 0.135589599609375}, {272, 0.135589599609375}, {
             273, 0.135589599609375}, {274, 0.135589599609375}, {
             275, 0.135589599609375}, {276, 0.135589599609375}, {
             277, 0.135589599609375}, {278, 0.135589599609375}, {
             279, 0.135589599609375}, {280, 0.135589599609375}, {
             281, 0.135589599609375}, {282, 0.135589599609375}, {
             283, 0.135589599609375}, {284, 0.135589599609375}, {
             285, 0.135589599609375}, {286, 0.135589599609375}, {
             287, 0.135589599609375}, {288, 0.135589599609375}, {
             289, 0.135589599609375}, {290, 0.135589599609375}, {
             291, 0.135589599609375}, {292, 0.135589599609375}, {
             293, 0.135589599609375}, {294, 0.135589599609375}, {
             295, 0.135589599609375}, {296, 0.135589599609375}, {
             297, 0.135589599609375}, {298, 0.135589599609375}, {
             299, 0.135589599609375}, {300, 0.135589599609375}, {
             301, 0.135589599609375}, {302, 0.135589599609375}, {
             303, 0.135589599609375}, {304, 0.135589599609375}, {
             305, 0.135589599609375}, {306, 0.135589599609375}, {
             307, 0.135589599609375}, {308, 0.135589599609375}, {
             309, 0.135589599609375}, {310, 0.135589599609375}, {
             311, 0.135589599609375}, {312, 0.135589599609375}, {
             313, 0.135589599609375}, {314, 0.135589599609375}, {
             315, 0.135589599609375}, {316, 0.135589599609375}, {
             317, 0.135589599609375}, {318, 0.135589599609375}, {
             319, 0.135589599609375}, {320, 0.135589599609375}, {
             321, 0.135589599609375}, {322, 0.135589599609375}, {
             323, 0.135589599609375}, {324, 0.135589599609375}, {
             325, 0.135589599609375}, {326, 0.135589599609375}, {
             327, 0.135589599609375}, {328, 0.135589599609375}, {
             329, 0.135589599609375}, {330, 0.135589599609375}, {
             331, 0.135589599609375}, {332, 0.135589599609375}, {
             333, 0.135589599609375}, {334, 0.135589599609375}, {
             335, 0.135589599609375}, {336, 0.135589599609375}, {
             337, 0.135589599609375}, {338, 0.135589599609375}, {
             339, 0.135589599609375}, {340, 0.135589599609375}, {
             341, 0.135589599609375}, {342, 0.135589599609375}, {
             343, 0.135589599609375}, {344, 0.135589599609375}, {
             345, 0.135589599609375}, {346, 0.135589599609375}, {
             347, 0.135589599609375}, {348, 0.135589599609375}, {
             349, 0.135589599609375}, {350, 0.135589599609375}, {
             351, 0.135589599609375}, {352, 0.135589599609375}, {
             353, 0.135589599609375}, {354, 0.135589599609375}, {
             355, 0.135589599609375}, {356, 0.135589599609375}, {
             357, 0.135589599609375}, {358, 0.135589599609375}, {
             359, 0.135589599609375}, {360, 0.135589599609375}, {
             361, 0.135589599609375}, {362, 0.135589599609375}, {
             363, 0.135589599609375}, {364, 0.135589599609375}, {
             365, 0.135589599609375}, {366, 0.135589599609375}, {
             367, 0.135589599609375}, {368, 0.135589599609375}, {
             369, 0.135589599609375}, {370, 0.135589599609375}, {
             371, 0.135589599609375}, {372, 0.135589599609375}, {
             373, 0.135589599609375}, {374, 0.135589599609375}, {
             375, 0.135589599609375}, {376, 0.135589599609375}, {
             377, 0.135589599609375}, {378, 0.135589599609375}, {
             379, 0.135589599609375}, {380, 0.135589599609375}, {
             381, 0.135589599609375}, {382, 0.135589599609375}, {
             383, 0.135589599609375}, {384, 0.135589599609375}, {
             385, 0.135589599609375}, {386, 0.135589599609375}, {
             387, 0.135589599609375}, {388, 0.135589599609375}, {
             389, 0.135589599609375}, {390, 0.135589599609375}, {
             391, 0.135589599609375}, {392, 0.135589599609375}, {
             393, 0.135589599609375}, {394, 0.135589599609375}, {
             395, 0.135589599609375}, {396, 0.135589599609375}, {
             397, 0.135589599609375}, {398, 0.135589599609375}, {
             399, 0.135589599609375}, {400, 0.135589599609375}, {
             401, 0.135589599609375}, {402, 0.135589599609375}, {
             403, 0.135589599609375}, {404, 0.135589599609375}, {
             405, 0.135589599609375}, {406, 0.135589599609375}, {
             407, 0.135589599609375}, {408, 0.135589599609375}, {
             409, 0.135589599609375}, {410, 0.135589599609375}, {
             411, 0.135589599609375}, {412, 0.135589599609375}, {
             413, 0.135589599609375}, {414, 0.135589599609375}, {
             415, 0.135589599609375}, {416, 0.135589599609375}, {
             417, 0.135589599609375}, {418, 0.135589599609375}, {
             419, 0.135589599609375}, {420, 0.135589599609375}, {
             421, 0.135589599609375}, {422, 0.135589599609375}, {
             423, 0.135589599609375}, {424, 0.135589599609375}, {
             425, 0.135589599609375}, {426, 0.135589599609375}, {
             427, 0.135589599609375}, {428, 0.135589599609375}, {
             429, 0.135589599609375}, {430, 0.135589599609375}, {
             431, 0.135589599609375}, {432, 0.135589599609375}, {
             433, 0.135589599609375}, {434, 0.135589599609375}, {
             435, 0.135589599609375}, {436, 0.135589599609375}, {
             437, 0.135589599609375}, {438, 0.135589599609375}, {
             439, 0.135589599609375}, {440, 0.135589599609375}, {
             441, 0.135589599609375}, {442, 0.135589599609375}, {
             443, 0.135589599609375}, {444, 0.135589599609375}, {
             445, 0.135589599609375}, {446, 0.135589599609375}, {
             447, 0.135589599609375}, {448, 0.135589599609375}, {
             449, 0.135589599609375}, {450, 0.135589599609375}, {
             451, 0.135589599609375}, {452, 0.135589599609375}, {
             453, 0.135589599609375}, {454, 0.135589599609375}, {
             455, 0.135589599609375}, {456, 0.135589599609375}, {
             457, 0.135589599609375}, {458, 0.135589599609375}, {
             459, 0.135589599609375}, {460, 0.135589599609375}, {
             461, 0.135589599609375}, {462, 0.135589599609375}, {
             463, 0.135589599609375}, {464, 0.135589599609375}, {
             465, 0.135589599609375}, {466, 0.135589599609375}, {
             467, 0.135589599609375}, {468, 0.135589599609375}, {
             469, 0.135589599609375}, {470, 0.135589599609375}, {
             471, 0.135589599609375}, {472, 0.135589599609375}, {
             473, 0.135589599609375}, {474, 0.135589599609375}, {
             475, 0.135589599609375}, {476, 0.135589599609375}, {
             477, 0.135589599609375}, {478, 0.135589599609375}, {
             479, 0.135589599609375}, {480, 0.135589599609375}, {
             481, 0.135589599609375}, {482, 0.135589599609375}, {
             483, 0.135589599609375}, {484, 0.135589599609375}, {
             485, 0.135589599609375}, {486, 0.135589599609375}, {
             487, 0.135589599609375}, {488, 0.135589599609375}, {
             489, 0.135589599609375}, {490, 0.135589599609375}, {
             491, 0.135589599609375}, {492, 0.135589599609375}, {
             493, 0.135589599609375}, {494, 0.135589599609375}, {
             495, 0.135589599609375}, {496, 0.135589599609375}, {
             497, 0.135589599609375}, {498, 0.135589599609375}, {
             499, 0.135589599609375}, {500, 0.135589599609375}, {
             501, 0.135589599609375}, {502, 0.135589599609375}, {
             503, 0.135589599609375}, {504, 0.135589599609375}, {
             505, 0.15482711791992188`}, {506, 0.15482711791992188`}, {
             507, 0.15482711791992188`}, {508, 0.15482711791992188`}, {
             509, 0.15482711791992188`}, {510, 0.15482711791992188`}, {
             511, 0.15482711791992188`}, {512, 0.15482711791992188`}, {
             513, 0.15482711791992188`}, {514, 0.15482711791992188`}, {
             515, 0.15482711791992188`}, {516, 0.15482711791992188`}, {
             517, 0.15482711791992188`}, {518, 0.15482711791992188`}, {
             519, 0.15482711791992188`}, {520, 0.15482711791992188`}, {
             521, 0.15513229370117188`}, {522, 0.15513229370117188`}, {
             523, 0.15513229370117188`}, {524, 0.15639114379882812`}, {
             525, 0.15639114379882812`}, {526, 0.15639114379882812`}, {
             527, 0.15639114379882812`}, {528, 0.15639114379882812`}, {
             529, 0.15639114379882812`}, {530, 0.15639114379882812`}, {
             531, 0.15639114379882812`}, {532, 0.15639114379882812`}, {
             533, 0.15639114379882812`}, {534, 0.15639114379882812`}, {
             535, 0.15764999389648438`}, {536, 0.15764999389648438`}, {
             537, 0.15764999389648438`}, {538, 0.15764999389648438`}, {
             539, 0.15764999389648438`}, {540, 0.15764999389648438`}, {
             541, 0.15764999389648438`}, {542, 0.15764999389648438`}, {
             543, 0.15764999389648438`}, {544, 0.15764999389648438`}, {
             545, 0.15790176391601562`}, {546, 0.15790176391601562`}, {
             547, 0.15790176391601562`}, {548, 0.15815353393554688`}, {
             549, 0.15865707397460938`}, {550, 0.15865707397460938`}, {
             551, 0.15890884399414062`}, {552, 0.15890884399414062`}, {
             553, 0.15890884399414062`}, {554, 0.15916061401367188`}, {
             555, 0.15916061401367188`}, {556, 0.15916061401367188`}, {
             557, 0.15941238403320312`}, {558, 0.15941238403320312`}, {
             559, 0.15966415405273438`}, {560, 0.15966415405273438`}, {
             561, 0.15966415405273438`}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, 
                    MemoryInUse[$FrontEnd]/1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {93., 98.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[$FrontEnd]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}}, BaselinePosition -> Top, 
       DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TagBox[
      GridBox[{{
         ItemBox[
          
          DynamicModuleBox[{
           MemoryUsagePalette`currentMemory$$ = 1.023295718373876, 
            MemoryUsagePalette`initialMemory$$ = 12515020800}, 
           DynamicBox[
            ToBoxes[
            MemoryUsagePalette`currentMemory$$ = 
              MemoryUsagePalette`UsedMemoryFunction[
               MemoryUsagePalette`initialMemory$$]; Panel[
               Row[{
                 HorizontalGauge[
                 MemoryUsagePalette`currentMemory$$, {0, 100}, 
                  ScaleRanges -> {{50, 60}, {60, 70}, {70, 80}, {80, 100}}, 
                  GaugeFrameStyle -> LightGray, GaugeFaceStyle -> 
                  LightOrange], 
                 StringJoin[
                  ToString[
                   Round[MemoryUsagePalette`currentMemory$$]], " %"]}], 
               Style["Free memory used", Bold], Top], StandardForm], 
            ImageSizeCache -> {221., {35., 54.}}], UpdateInterval -> 1, 
           DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`UsedMemoryFunction[
               Pattern[MemoryUsagePalette`initialMemory, 
                Blank[]]] := If[$VersionNumber < 11.2, 100 N[
                 Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 
               N[
                 Ramp[
                 1 - MemoryUsagePalette`MemoryAvailable[]/
                  MemoryUsagePalette`initialMemory]]]}], Alignment -> Center, 
          StripOnInput -> False]}, {"\"\""}, {
         ItemBox[
          StyleBox[
          "\"Symbol memory usage\"", StripOnInput -> False, FontWeight -> 
           Bold], Alignment -> Center, StripOnInput -> False]}, {
         ItemBox[
          DynamicModuleBox[{MemoryUsagePalette`selection$$ = 2}, 
           PanelBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  StyleBox["\"Context: \"", Bold, StripOnInput -> False], 
                  InterpretationBox[
                   PopupMenuBox[
                    Dynamic[MemoryUsagePalette`selection$$], {
                    1 -> TagBox[
                    "\"WolframAlphaClient`\"", {"ResetImageSizeLevel", 2}], 2 -> 
                    TagBox["\"Global`\"", {"ResetImageSizeLevel", 2}]}], 
                   PopupView[{"WolframAlphaClient`", "Global`"}, 
                    Dynamic[MemoryUsagePalette`selection$$]]]}, 
                 "RowDefault"]}, {
                DynamicBox[
                 ToBoxes[
                  MemoryUsagePalette`SymbolMemoryUsage[
                   Part[
                    MemoryUsagePalette`GetContexts[], 
                    MemoryUsagePalette`selection$$]], StandardForm], 
                 ImageSizeCache -> {149., {14., 19.}}]}}, DefaultBaseStyle -> 
              "Column", GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`SymbolMemoryUsage[
               Pattern[MemoryUsagePalette`context, 
                Blank[]]] := DynamicModule[{MemoryUsagePalette`patt}, 
               Dynamic[
               MemoryUsagePalette`patt = 
                 StringJoin[MemoryUsagePalette`context, "*"]; Grid[
                  Join[{{
                    Item[
                    Style["Symbol", Bold, Black], Background -> LightGray, 
                    Alignment -> Center], 
                    Item[
                    Style["Memory (MiB)", Bold, Black], Background -> 
                    LightGray, Alignment -> Center]}}, 
                   If[Length[
                    Names[MemoryUsagePalette`patt]] == 0, {{
                    Item["No symbols defined", Alignment -> Center], 
                    SpanFromLeft}}, 
                    Transpose[{
                    Names[MemoryUsagePalette`patt], 
                    Map[ByteCount[#]/1024.^2.& , 
                    Map[ToExpression, 
                    Names[MemoryUsagePalette`patt]]]}]]], Alignment -> Left, 
                  Background -> {{LightYellow}, None}, Frame -> All, 
                  FrameStyle -> Directive[Gray]], UpdateInterval -> 0.5, 
                SaveDefinitions -> True]], MemoryUsagePalette`GetContexts[] := 
             Block[{MemoryUsagePalette`unused}, 
               MemoryUsagePalette`unused = {
                 "CloudObjectLoader`", "IntegratedServicesLoader`", 
                  "StreamingLoader`", "InterpreterLoader`", "IconizeLoader`", 
                  "HTTPHandlingLoader`", "GeneralUtilitiesLoader`", 
                  "AuthenticationLoader`", "SystemTools`", "PacletManager`", 
                  "System`"}; Return[
                 
                 MemoryUsagePalette`DeleteInstances[$ContextPath, 
                  MemoryUsagePalette`unused]]; Null], 
             MemoryUsagePalette`DeleteInstances[
               Pattern[MemoryUsagePalette`expr, 
                Blank[]], 
               Pattern[MemoryUsagePalette`list, 
                Blank[List]]] := Select[MemoryUsagePalette`expr, Not[
                MemberQ[MemoryUsagePalette`list, #]]& ], $ContextPath = {
              "WolframAlphaClient`", "StreamingLoader`", "InterpreterLoader`",
                "IconizeLoader`", "HTTPHandlingLoader`", "CloudObjectLoader`",
                "PacletManager`", "System`", "Global`"}}], Alignment -> 
          Center, StripOnInput -> False]}}, BaselinePosition -> Top, 
       DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
    "Row",
    DisplayFunction->(PaneBox[
      RowBox[{
        TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
      Baseline]& ),
    InterpretationFunction->(RowBox[{"Row", "[", 
       RowBox[{
         RowBox[{"{", 
           TemplateSlotSequence[1, ","], "}"}], ",", 
         RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )]]}, {
  2,"\<\"Options\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"History length size\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"By default, Mathematica saves all outputs in the \
memory.\\nReducing history length size can improve memory usage.\"\>"},
      {
       TagBox[GridBox[{
          {
           DynamicBox[ToBoxes[
             Button[
             0, $HistoryLength = 0, Background -> 
              If[$HistoryLength == 0, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {8., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             1, $HistoryLength = 1, Background -> 
              If[$HistoryLength == 1, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {8., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             2, $HistoryLength = 2, Background -> 
              If[$HistoryLength == 2, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {8., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             3, $HistoryLength = 3, Background -> 
              If[$HistoryLength == 3, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {8., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
              DirectedInfinity[1], $HistoryLength = DirectedInfinity[1], 
              Background -> 
              If[$HistoryLength == DirectedInfinity[1], LightYellow, 
                Automatic]], StandardForm],
            ImageSizeCache->{17., {8., 14.}}]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}}],
        "Grid"]},
      {"\<\"\"\>"},
      {
       StyleBox["\<\"Memory protection\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Abort kernel if free memory is used up to a specified level.\"\>"},
      {
       DynamicModuleBox[{MemoryUsagePalette`protect$$ = False, 
        MemoryUsagePalette`limit$$ = 80, MemoryUsagePalette`initialMemory$$ = 
        12515020800}, 
        DynamicBox[ToBoxes[Refresh[
            If[MemoryUsagePalette`protect$$, 
             MemoryUsagePalette`MemoryWatchdog[
             MemoryUsagePalette`initialMemory$$, MemoryUsagePalette`limit$$]],
             UpdateInterval -> 1]; Grid[{{"Protect memory: ", 
              Checkbox[
               Dynamic[MemoryUsagePalette`protect$$]]}, {
             "Used memory limit: ", 
              Slider[
               Dynamic[MemoryUsagePalette`limit$$], {10, 100, 1}, Enabled -> 
               MemoryUsagePalette`protect$$], MemoryUsagePalette`limit$$}}, 
            Alignment -> Left], StandardForm],
         ImageSizeCache->{345., {16., 21.}}],
        DynamicModuleValues:>{},
        Initialization:>{MemoryUsagePalette`MemoryWatchdog[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]], 
            Pattern[MemoryUsagePalette`limit, 
             Blank[]]] := 
          Block[{MemoryUsagePalette`currentMemory}, 
            MemoryUsagePalette`currentMemory = 
             MemoryUsagePalette`UsedMemoryFunction[
              MemoryUsagePalette`initialMemory]; 
            If[MemoryUsagePalette`currentMemory > MemoryUsagePalette`limit, 
              Quit[]]; Null], MemoryUsagePalette`UsedMemoryFunction[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]]] := If[$VersionNumber < 11.2, 100 N[
              Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 N[
              Ramp[
              1 - MemoryUsagePalette`MemoryAvailable[]/
               MemoryUsagePalette`initialMemory]]]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]]}}, 1]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"ebf64502-b4da-4b86-ab3c-c0568fe693dd"]
},
WindowSize->All,
WindowMargins->{{Automatic, 0}, {Automatic, 194}},
WindowElements->{},
WindowTitle->"Memory Monitor",
DynamicUpdating->True,
Magnification->1,
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 50486, 847, 575, InheritFromParent, "ExpressionUUID" -> \
"ebf64502-b4da-4b86-ab3c-c0568fe693dd",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

