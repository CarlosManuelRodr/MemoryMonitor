(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     54322,        915]
NotebookOptionsPosition[     53922,        898]
NotebookOutlinePosition[     54309,        915]
CellTagsIndexPosition[     54266,        912]
WindowTitle->Memory Monitor
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 TabViewBox[{{1,"\<\"Memory monitor\"\>"->
  PanelBox[
   TemplateBox[{TagBox[
      GridBox[{{
         ItemBox[
          StyleBox[
          "\"Kernel memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{8, 138.66722869873047`}, {
             9, 138.66722869873047`}, {10, 138.66722869873047`}, {
             11, 138.66722869873047`}, {12, 138.66722869873047`}, {
             13, 138.66722869873047`}, {14, 138.66722869873047`}, {
             15, 138.66722869873047`}, {16, 138.66722869873047`}, {
             17, 138.66722869873047`}, {18, 138.66722869873047`}, {
             19, 138.66722869873047`}, {20, 138.66722869873047`}, {
             21, 138.66722869873047`}, {22, 138.66722869873047`}, {
             23, 138.66722869873047`}, {24, 138.66722869873047`}, {
             25, 138.66722869873047`}, {26, 138.66722869873047`}, {
             27, 138.66722869873047`}, {28, 138.66722869873047`}, {
             29, 138.66722869873047`}, {30, 138.66722869873047`}, {
             31, 138.66722869873047`}, {32, 138.66722869873047`}, {
             33, 138.66722869873047`}, {34, 138.66722869873047`}, {
             35, 138.66722869873047`}, {36, 138.66722869873047`}, {
             37, 138.66722869873047`}, {38, 138.66722869873047`}, {
             39, 138.66722869873047`}, {40, 138.66722869873047`}, {
             41, 138.66722869873047`}, {42, 138.66722869873047`}, {
             43, 138.66722869873047`}, {44, 138.66722869873047`}, {
             45, 138.66722869873047`}, {46, 138.66722869873047`}, {
             47, 138.66722869873047`}, {48, 138.66722869873047`}, {
             49, 138.66722869873047`}, {50, 138.66722869873047`}, {
             51, 138.66722869873047`}, {52, 138.66722869873047`}, {
             53, 138.66722869873047`}, {54, 138.66722869873047`}, {
             55, 138.66722869873047`}, {56, 138.66722869873047`}, {
             57, 138.66722869873047`}, {58, 138.66722869873047`}, {
             59, 138.66722869873047`}, {60, 138.66722869873047`}, {
             61, 138.66722869873047`}, {62, 138.66722869873047`}, {
             63, 138.66722869873047`}, {64, 138.66722869873047`}, {
             65, 138.66722869873047`}, {66, 138.66722869873047`}, {
             67, 138.66722869873047`}, {68, 138.66722869873047`}, {
             69, 138.66722869873047`}, {70, 138.66722869873047`}, {
             71, 138.66722869873047`}, {72, 138.66722869873047`}, {
             73, 138.66722869873047`}, {74, 138.66722869873047`}, {
             75, 138.66722869873047`}, {76, 138.66722869873047`}, {
             77, 138.66722869873047`}, {78, 138.66722869873047`}, {
             79, 138.66722869873047`}, {80, 138.66722869873047`}, {
             81, 138.66722869873047`}, {82, 138.66722869873047`}, {
             83, 138.66722869873047`}, {84, 138.66722869873047`}, {
             85, 138.66722869873047`}, {86, 138.66722869873047`}, {
             87, 138.66722869873047`}, {88, 138.66722869873047`}, {
             89, 138.66722869873047`}, {90, 138.66722869873047`}, {
             91, 138.66722869873047`}, {92, 138.66722869873047`}, {
             93, 138.66722869873047`}, {94, 138.66722869873047`}, {
             95, 138.66722869873047`}, {96, 138.66722869873047`}, {
             97, 138.66722869873047`}, {98, 138.66722869873047`}, {
             99, 138.66722869873047`}, {100, 138.66722869873047`}, {
             101, 138.66722869873047`}, {102, 138.66722869873047`}, {
             103, 138.66722869873047`}, {104, 138.66722869873047`}, {
             105, 138.66722869873047`}, {106, 138.66722869873047`}, {
             107, 138.66722869873047`}, {108, 138.66722869873047`}, {
             109, 138.66722869873047`}, {110, 138.66722869873047`}, {
             111, 138.66722869873047`}, {112, 138.66722869873047`}, {
             113, 138.66722869873047`}, {114, 138.66722869873047`}, {
             115, 138.66722869873047`}, {116, 138.66722869873047`}, {
             117, 138.66722869873047`}, {118, 138.66722869873047`}, {
             119, 138.66722869873047`}, {120, 138.66722869873047`}, {
             121, 138.66722869873047`}, {122, 138.66722869873047`}, {
             123, 138.66722869873047`}, {124, 138.66722869873047`}, {
             125, 138.66722869873047`}, {126, 138.66722869873047`}, {
             127, 138.66722869873047`}, {128, 138.66722869873047`}, {
             129, 138.66722869873047`}, {130, 138.66722869873047`}, {
             131, 138.66722869873047`}, {132, 138.66722869873047`}, {
             133, 138.66722869873047`}, {134, 138.66722869873047`}, {
             135, 138.66722869873047`}, {136, 138.66722869873047`}, {
             137, 138.66722869873047`}, {138, 138.66722869873047`}, {
             139, 138.66722869873047`}, {140, 138.66722869873047`}, {
             141, 138.66722869873047`}, {142, 138.66722869873047`}, {
             143, 138.66722869873047`}, {144, 138.66722869873047`}, {
             145, 138.66722869873047`}, {146, 138.66722869873047`}, {
             147, 138.66722869873047`}, {148, 138.66722869873047`}, {
             149, 138.66722869873047`}, {150, 138.66722869873047`}, {
             151, 138.66722869873047`}, {152, 138.66722869873047`}, {
             153, 138.66722869873047`}, {154, 138.66722869873047`}, {
             155, 138.66722869873047`}, {156, 138.66722869873047`}, {
             157, 138.66722869873047`}, {158, 138.66722869873047`}, {
             159, 138.66722869873047`}, {160, 138.66722869873047`}, {
             161, 138.66722869873047`}, {162, 138.66722869873047`}, {
             163, 138.66722869873047`}, {164, 138.66722869873047`}, {
             165, 138.66722869873047`}, {166, 138.66722869873047`}, {
             167, 138.66722869873047`}, {168, 138.66722869873047`}, {
             169, 138.66722869873047`}, {170, 138.66722869873047`}, {
             171, 138.66722869873047`}, {172, 138.66722869873047`}, {
             173, 138.66722869873047`}, {174, 138.66722869873047`}, {
             175, 138.66722869873047`}, {176, 138.66722869873047`}, {
             177, 138.66722869873047`}, {178, 138.66722869873047`}, {
             179, 138.66722869873047`}, {180, 138.66722869873047`}, {
             181, 138.66722869873047`}, {182, 138.66722869873047`}, {
             183, 138.66722869873047`}, {184, 138.66722869873047`}, {
             185, 138.66722869873047`}, {186, 138.66722869873047`}, {
             187, 138.66722869873047`}, {188, 138.66722869873047`}, {
             189, 138.66722869873047`}, {190, 138.66722869873047`}, {
             191, 138.66722869873047`}, {192, 138.66722869873047`}, {
             193, 138.66722869873047`}, {194, 138.66722869873047`}, {
             195, 138.66722869873047`}, {196, 138.66722869873047`}, {
             197, 138.66722869873047`}, {198, 138.66722869873047`}, {
             199, 138.66722869873047`}, {200, 138.66722869873047`}, {
             201, 138.66722869873047`}, {202, 138.66722869873047`}, {
             203, 138.66722869873047`}, {204, 138.66722869873047`}, {
             205, 138.66722869873047`}, {206, 138.66722869873047`}, {
             207, 138.66722869873047`}, {208, 138.66722869873047`}, {
             209, 138.66722869873047`}, {210, 138.66722869873047`}, {
             211, 138.66722869873047`}, {212, 138.66722869873047`}, {
             213, 138.66722869873047`}, {214, 138.66722869873047`}, {
             215, 138.66722869873047`}, {216, 138.66722869873047`}, {
             217, 138.66722869873047`}, {218, 138.66722869873047`}, {
             219, 138.66722869873047`}, {220, 138.66722869873047`}, {
             221, 138.66722869873047`}, {222, 138.66722869873047`}, {
             223, 138.66722869873047`}, {224, 138.66722869873047`}, {
             225, 138.66722869873047`}, {226, 138.66722869873047`}, {
             227, 138.66722869873047`}, {228, 138.66722869873047`}, {
             229, 138.66722869873047`}, {230, 138.66722869873047`}, {
             231, 138.66722869873047`}, {232, 138.66722869873047`}, {
             233, 138.66722869873047`}, {234, 138.66722869873047`}, {
             235, 138.66722869873047`}, {236, 138.66722869873047`}, {
             237, 138.66722869873047`}, {238, 138.66722869873047`}, {
             239, 138.66722869873047`}, {240, 138.66722869873047`}, {
             241, 138.66722869873047`}, {242, 138.66722869873047`}, {
             243, 138.66722869873047`}, {244, 138.66722869873047`}, {
             245, 138.66722869873047`}, {246, 138.66722869873047`}, {
             247, 138.66722869873047`}, {248, 138.66722869873047`}, {
             249, 138.66722869873047`}, {250, 138.66722869873047`}, {
             251, 138.66722869873047`}, {252, 138.66722869873047`}, {
             253, 138.66722869873047`}, {254, 138.66722869873047`}, {
             255, 138.66722869873047`}, {256, 138.66722869873047`}, {
             257, 138.66722869873047`}, {258, 138.66722869873047`}, {
             259, 138.66722869873047`}, {260, 138.66722869873047`}, {
             261, 138.66722869873047`}, {262, 138.66722869873047`}, {
             263, 138.66722869873047`}, {264, 138.66722869873047`}, {
             265, 138.66722869873047`}, {266, 138.66722869873047`}, {
             267, 138.66722869873047`}, {268, 138.66722869873047`}, {
             269, 138.66722869873047`}, {270, 138.66722869873047`}, {
             271, 138.66722869873047`}, {272, 138.66722869873047`}, {
             273, 138.66722869873047`}, {274, 138.66722869873047`}, {
             275, 138.66722869873047`}, {276, 138.66722869873047`}, {
             277, 138.66722869873047`}, {278, 138.66722869873047`}, {
             279, 138.66722869873047`}, {280, 138.66722869873047`}, {
             281, 138.66722869873047`}, {282, 138.66722869873047`}, {
             283, 138.66722869873047`}, {284, 138.66722869873047`}, {
             285, 138.66722869873047`}, {286, 138.66722869873047`}, {
             287, 138.66722869873047`}, {288, 138.66722869873047`}, {
             289, 138.66722869873047`}, {290, 138.66722869873047`}, {
             291, 138.66722869873047`}, {292, 138.66722869873047`}, {
             293, 138.66722869873047`}, {294, 138.66722869873047`}, {
             295, 138.66722869873047`}, {296, 138.66722869873047`}, {
             297, 138.66722869873047`}, {298, 138.66722869873047`}, {
             299, 138.66722869873047`}, {300, 138.66722869873047`}, {
             301, 138.66722869873047`}, {302, 138.66722869873047`}, {
             303, 138.66722869873047`}, {304, 138.66722869873047`}, {
             305, 138.66722869873047`}, {306, 138.66722869873047`}, {
             307, 138.66722869873047`}, {308, 138.66722869873047`}, {
             309, 138.66722869873047`}, {310, 138.66722869873047`}, {
             311, 138.66722869873047`}, {312, 138.66722869873047`}, {
             313, 138.66722869873047`}, {314, 138.66722869873047`}, {
             315, 138.66722869873047`}, {316, 138.66722869873047`}, {
             317, 138.66722869873047`}, {318, 138.66722869873047`}, {
             319, 138.66722869873047`}, {320, 138.66722869873047`}, {
             321, 138.66722869873047`}, {322, 138.66722869873047`}, {
             323, 138.66722869873047`}, {324, 138.66722869873047`}, {
             325, 138.66722869873047`}, {326, 138.66722869873047`}, {
             327, 138.66722869873047`}, {328, 138.66722869873047`}, {
             329, 138.66722869873047`}, {330, 138.66722869873047`}, {
             331, 138.66722869873047`}, {332, 138.66722869873047`}, {
             333, 138.66722869873047`}, {334, 138.66722869873047`}, {
             335, 138.66722869873047`}, {336, 138.66722869873047`}, {
             337, 138.66722869873047`}, {338, 138.66722869873047`}, {
             339, 138.66722869873047`}, {340, 138.66722869873047`}, {
             341, 138.66722869873047`}, {342, 138.66722869873047`}, {
             343, 138.66722869873047`}, {344, 138.66722869873047`}, {
             345, 138.66722869873047`}, {346, 138.66722869873047`}, {
             347, 138.66722869873047`}, {348, 138.66722869873047`}, {
             349, 138.66722869873047`}, {350, 138.66722869873047`}, {
             351, 138.66722869873047`}, {352, 138.66722869873047`}, {
             353, 138.66722869873047`}, {354, 138.66722869873047`}, {
             355, 138.66722869873047`}, {356, 138.66722869873047`}, {
             357, 138.66722869873047`}, {358, 138.66722869873047`}, {
             359, 138.66722869873047`}, {360, 138.66722869873047`}, {
             361, 138.66722869873047`}, {362, 138.66722869873047`}, {
             363, 138.66722869873047`}, {364, 138.66722869873047`}, {
             365, 138.66722869873047`}, {366, 138.66722869873047`}, {
             367, 138.66722869873047`}, {368, 138.66722869873047`}, {
             369, 138.66722869873047`}, {370, 138.66722869873047`}, {
             371, 138.66722869873047`}, {372, 138.66722869873047`}, {
             373, 138.66722869873047`}, {374, 138.66722869873047`}, {
             375, 138.66722869873047`}, {376, 138.66722869873047`}, {
             377, 138.66722869873047`}, {378, 138.66722869873047`}, {
             379, 138.66722869873047`}, {380, 138.66722869873047`}, {
             381, 138.66722869873047`}, {382, 138.66722869873047`}, {
             383, 138.66722869873047`}, {384, 138.66722869873047`}, {
             385, 138.66722869873047`}, {386, 138.66722869873047`}, {
             387, 138.66722869873047`}, {388, 138.66722869873047`}, {
             389, 138.66722869873047`}, {390, 138.66722869873047`}, {
             391, 138.66722869873047`}, {392, 138.66722869873047`}, {
             393, 138.66722869873047`}, {394, 138.66722869873047`}, {
             395, 138.66722869873047`}, {396, 138.66722869873047`}, {
             397, 138.66722869873047`}, {398, 138.66722869873047`}, {
             399, 138.66722869873047`}, {400, 138.66722869873047`}, {
             401, 138.66722869873047`}, {402, 138.66722869873047`}, {
             403, 138.66722869873047`}, {404, 138.66722869873047`}, {
             405, 138.66722869873047`}, {406, 138.66722869873047`}, {
             407, 138.66722869873047`}, {408, 138.66722869873047`}, {
             409, 138.66722869873047`}, {410, 138.66722869873047`}, {
             411, 138.66722869873047`}, {412, 138.66722869873047`}, {
             413, 138.66722869873047`}, {414, 138.66722869873047`}, {
             415, 138.66722869873047`}, {416, 138.66722869873047`}, {
             417, 138.66722869873047`}, {418, 138.66722869873047`}, {
             419, 138.66722869873047`}, {420, 138.66722869873047`}, {
             421, 138.66722869873047`}, {422, 138.66722869873047`}, {
             423, 138.66722869873047`}, {424, 138.66722869873047`}, {
             425, 138.66722869873047`}, {426, 138.66722869873047`}, {
             427, 138.66722869873047`}, {428, 138.66722869873047`}, {
             429, 138.66722869873047`}, {430, 138.66722869873047`}, {
             431, 138.66722869873047`}, {432, 138.66722869873047`}, {
             433, 138.66722869873047`}, {434, 138.66722869873047`}, {
             435, 138.66722869873047`}, {436, 138.66722869873047`}, {
             437, 138.66722869873047`}, {438, 138.66722869873047`}, {
             439, 138.66722869873047`}, {440, 138.66722869873047`}, {
             441, 138.66722869873047`}, {442, 138.66722869873047`}, {
             443, 138.66722869873047`}, {444, 138.66722869873047`}, {
             445, 138.66722869873047`}, {446, 138.66722869873047`}, {
             447, 138.66722869873047`}, {448, 138.66722869873047`}, {
             449, 138.66722869873047`}, {450, 138.66722869873047`}, {
             451, 138.66722869873047`}, {452, 138.66722869873047`}, {
             453, 138.66722869873047`}, {454, 138.66722869873047`}, {
             455, 138.66722869873047`}, {456, 138.66722869873047`}, {
             457, 138.66722869873047`}, {458, 138.66722869873047`}, {
             459, 138.66722869873047`}, {460, 138.66722869873047`}, {
             461, 138.66722869873047`}, {462, 138.66722869873047`}, {
             463, 138.66722869873047`}, {464, 138.66722869873047`}, {
             465, 138.66722869873047`}, {466, 138.66722869873047`}, {
             467, 138.66722869873047`}, {468, 138.66722869873047`}, {
             469, 138.66722869873047`}, {470, 138.66722869873047`}, {
             471, 138.66722869873047`}, {472, 138.66722869873047`}, {
             473, 138.66722869873047`}, {474, 138.66722869873047`}, {
             475, 138.66722869873047`}, {476, 138.66722869873047`}, {
             477, 138.66722869873047`}, {478, 138.66722869873047`}, {
             479, 138.66722869873047`}, {480, 138.66722869873047`}, {
             481, 138.66722869873047`}, {482, 138.66722869873047`}, {
             483, 138.66722869873047`}, {484, 138.66722869873047`}, {
             485, 138.66722869873047`}, {486, 138.66722869873047`}, {
             487, 138.66722869873047`}, {488, 138.66722869873047`}, {
             489, 138.66722869873047`}, {490, 138.66722869873047`}, {
             491, 138.66722869873047`}, {492, 138.66722869873047`}, {
             493, 138.66722869873047`}, {494, 138.66722869873047`}, {
             495, 138.66722869873047`}, {496, 138.66722869873047`}, {
             497, 138.66722869873047`}, {498, 138.66722869873047`}, {
             499, 138.66722869873047`}, {500, 138.66722869873047`}, {
             501, 139.65382385253906`}, {502, 152.93104553222656`}, {
             503, 152.93960571289062`}, {504, 152.94388580322266`}, {
             505, 152.9457778930664}, {506, 152.94894409179688`}, {
             507, 152.95679473876953`}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, MemoryInUse[]/
                    1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {96., 99.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}, {"\"\""}, {
         ItemBox[
          StyleBox[
          "\"Frontend memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{8, 0.14311981201171875`}, {
             9, 0.14311981201171875`}, {10, 0.14311981201171875`}, {
             11, 0.14311981201171875`}, {12, 0.14311981201171875`}, {
             13, 0.14311981201171875`}, {14, 0.14311981201171875`}, {
             15, 0.14311981201171875`}, {16, 0.14311981201171875`}, {
             17, 0.14311981201171875`}, {18, 0.14311981201171875`}, {
             19, 0.14311981201171875`}, {20, 0.14311981201171875`}, {
             21, 0.14311981201171875`}, {22, 0.14311981201171875`}, {
             23, 0.14311981201171875`}, {24, 0.14311981201171875`}, {
             25, 0.14311981201171875`}, {26, 0.14311981201171875`}, {
             27, 0.14311981201171875`}, {28, 0.14311981201171875`}, {
             29, 0.14311981201171875`}, {30, 0.14311981201171875`}, {
             31, 0.14311981201171875`}, {32, 0.14311981201171875`}, {
             33, 0.14311981201171875`}, {34, 0.14311981201171875`}, {
             35, 0.14311981201171875`}, {36, 0.14311981201171875`}, {
             37, 0.14311981201171875`}, {38, 0.14311981201171875`}, {
             39, 0.14311981201171875`}, {40, 0.14311981201171875`}, {
             41, 0.14311981201171875`}, {42, 0.14311981201171875`}, {
             43, 0.14311981201171875`}, {44, 0.14311981201171875`}, {
             45, 0.14311981201171875`}, {46, 0.14311981201171875`}, {
             47, 0.14311981201171875`}, {48, 0.14311981201171875`}, {
             49, 0.14311981201171875`}, {50, 0.14311981201171875`}, {
             51, 0.14311981201171875`}, {52, 0.14311981201171875`}, {
             53, 0.14311981201171875`}, {54, 0.14311981201171875`}, {
             55, 0.14311981201171875`}, {56, 0.14311981201171875`}, {
             57, 0.14311981201171875`}, {58, 0.14311981201171875`}, {
             59, 0.14311981201171875`}, {60, 0.14311981201171875`}, {
             61, 0.14311981201171875`}, {62, 0.14311981201171875`}, {
             63, 0.14311981201171875`}, {64, 0.14311981201171875`}, {
             65, 0.14311981201171875`}, {66, 0.14311981201171875`}, {
             67, 0.14311981201171875`}, {68, 0.14311981201171875`}, {
             69, 0.14311981201171875`}, {70, 0.14311981201171875`}, {
             71, 0.14311981201171875`}, {72, 0.14311981201171875`}, {
             73, 0.14311981201171875`}, {74, 0.14311981201171875`}, {
             75, 0.14311981201171875`}, {76, 0.14311981201171875`}, {
             77, 0.14311981201171875`}, {78, 0.14311981201171875`}, {
             79, 0.14311981201171875`}, {80, 0.14311981201171875`}, {
             81, 0.14311981201171875`}, {82, 0.14311981201171875`}, {
             83, 0.14311981201171875`}, {84, 0.14311981201171875`}, {
             85, 0.14311981201171875`}, {86, 0.14311981201171875`}, {
             87, 0.14311981201171875`}, {88, 0.14311981201171875`}, {
             89, 0.14311981201171875`}, {90, 0.14311981201171875`}, {
             91, 0.14311981201171875`}, {92, 0.14311981201171875`}, {
             93, 0.14311981201171875`}, {94, 0.14311981201171875`}, {
             95, 0.14311981201171875`}, {96, 0.14311981201171875`}, {
             97, 0.14311981201171875`}, {98, 0.14311981201171875`}, {
             99, 0.14311981201171875`}, {100, 0.14311981201171875`}, {
             101, 0.14311981201171875`}, {102, 0.14311981201171875`}, {
             103, 0.14311981201171875`}, {104, 0.14311981201171875`}, {
             105, 0.14311981201171875`}, {106, 0.14311981201171875`}, {
             107, 0.14311981201171875`}, {108, 0.14311981201171875`}, {
             109, 0.14311981201171875`}, {110, 0.14311981201171875`}, {
             111, 0.14311981201171875`}, {112, 0.14311981201171875`}, {
             113, 0.14311981201171875`}, {114, 0.14311981201171875`}, {
             115, 0.14311981201171875`}, {116, 0.14311981201171875`}, {
             117, 0.14311981201171875`}, {118, 0.14311981201171875`}, {
             119, 0.14311981201171875`}, {120, 0.14311981201171875`}, {
             121, 0.14311981201171875`}, {122, 0.14311981201171875`}, {
             123, 0.14311981201171875`}, {124, 0.14311981201171875`}, {
             125, 0.14311981201171875`}, {126, 0.14311981201171875`}, {
             127, 0.14311981201171875`}, {128, 0.14311981201171875`}, {
             129, 0.14311981201171875`}, {130, 0.14311981201171875`}, {
             131, 0.14311981201171875`}, {132, 0.14311981201171875`}, {
             133, 0.14311981201171875`}, {134, 0.14311981201171875`}, {
             135, 0.14311981201171875`}, {136, 0.14311981201171875`}, {
             137, 0.14311981201171875`}, {138, 0.14311981201171875`}, {
             139, 0.14311981201171875`}, {140, 0.14311981201171875`}, {
             141, 0.14311981201171875`}, {142, 0.14311981201171875`}, {
             143, 0.14311981201171875`}, {144, 0.14311981201171875`}, {
             145, 0.14311981201171875`}, {146, 0.14311981201171875`}, {
             147, 0.14311981201171875`}, {148, 0.14311981201171875`}, {
             149, 0.14311981201171875`}, {150, 0.14311981201171875`}, {
             151, 0.14311981201171875`}, {152, 0.14311981201171875`}, {
             153, 0.14311981201171875`}, {154, 0.14311981201171875`}, {
             155, 0.14311981201171875`}, {156, 0.14311981201171875`}, {
             157, 0.14311981201171875`}, {158, 0.14311981201171875`}, {
             159, 0.14311981201171875`}, {160, 0.14311981201171875`}, {
             161, 0.14311981201171875`}, {162, 0.14311981201171875`}, {
             163, 0.14311981201171875`}, {164, 0.14311981201171875`}, {
             165, 0.14311981201171875`}, {166, 0.14311981201171875`}, {
             167, 0.14311981201171875`}, {168, 0.14311981201171875`}, {
             169, 0.14311981201171875`}, {170, 0.14311981201171875`}, {
             171, 0.14311981201171875`}, {172, 0.14311981201171875`}, {
             173, 0.14311981201171875`}, {174, 0.14311981201171875`}, {
             175, 0.14311981201171875`}, {176, 0.14311981201171875`}, {
             177, 0.14311981201171875`}, {178, 0.14311981201171875`}, {
             179, 0.14311981201171875`}, {180, 0.14311981201171875`}, {
             181, 0.14311981201171875`}, {182, 0.14311981201171875`}, {
             183, 0.14311981201171875`}, {184, 0.14311981201171875`}, {
             185, 0.14311981201171875`}, {186, 0.14311981201171875`}, {
             187, 0.14311981201171875`}, {188, 0.14311981201171875`}, {
             189, 0.14311981201171875`}, {190, 0.14311981201171875`}, {
             191, 0.14311981201171875`}, {192, 0.14311981201171875`}, {
             193, 0.14311981201171875`}, {194, 0.14311981201171875`}, {
             195, 0.14311981201171875`}, {196, 0.14311981201171875`}, {
             197, 0.14311981201171875`}, {198, 0.14311981201171875`}, {
             199, 0.14311981201171875`}, {200, 0.14311981201171875`}, {
             201, 0.14311981201171875`}, {202, 0.14311981201171875`}, {
             203, 0.14311981201171875`}, {204, 0.14311981201171875`}, {
             205, 0.14311981201171875`}, {206, 0.14311981201171875`}, {
             207, 0.14311981201171875`}, {208, 0.14311981201171875`}, {
             209, 0.14311981201171875`}, {210, 0.14311981201171875`}, {
             211, 0.14311981201171875`}, {212, 0.14311981201171875`}, {
             213, 0.14311981201171875`}, {214, 0.14311981201171875`}, {
             215, 0.14311981201171875`}, {216, 0.14311981201171875`}, {
             217, 0.14311981201171875`}, {218, 0.14311981201171875`}, {
             219, 0.14311981201171875`}, {220, 0.14311981201171875`}, {
             221, 0.14311981201171875`}, {222, 0.14311981201171875`}, {
             223, 0.14311981201171875`}, {224, 0.14311981201171875`}, {
             225, 0.14311981201171875`}, {226, 0.14311981201171875`}, {
             227, 0.14311981201171875`}, {228, 0.14311981201171875`}, {
             229, 0.14311981201171875`}, {230, 0.14311981201171875`}, {
             231, 0.14311981201171875`}, {232, 0.14311981201171875`}, {
             233, 0.14311981201171875`}, {234, 0.14311981201171875`}, {
             235, 0.14311981201171875`}, {236, 0.14311981201171875`}, {
             237, 0.14311981201171875`}, {238, 0.14311981201171875`}, {
             239, 0.14311981201171875`}, {240, 0.14311981201171875`}, {
             241, 0.14311981201171875`}, {242, 0.14311981201171875`}, {
             243, 0.14311981201171875`}, {244, 0.14311981201171875`}, {
             245, 0.14311981201171875`}, {246, 0.14311981201171875`}, {
             247, 0.14311981201171875`}, {248, 0.14311981201171875`}, {
             249, 0.14311981201171875`}, {250, 0.14311981201171875`}, {
             251, 0.14311981201171875`}, {252, 0.14311981201171875`}, {
             253, 0.14311981201171875`}, {254, 0.14311981201171875`}, {
             255, 0.14311981201171875`}, {256, 0.14311981201171875`}, {
             257, 0.14311981201171875`}, {258, 0.14311981201171875`}, {
             259, 0.14311981201171875`}, {260, 0.14311981201171875`}, {
             261, 0.14311981201171875`}, {262, 0.14311981201171875`}, {
             263, 0.14311981201171875`}, {264, 0.14311981201171875`}, {
             265, 0.14311981201171875`}, {266, 0.14311981201171875`}, {
             267, 0.14311981201171875`}, {268, 0.14311981201171875`}, {
             269, 0.14311981201171875`}, {270, 0.14311981201171875`}, {
             271, 0.14311981201171875`}, {272, 0.14311981201171875`}, {
             273, 0.14311981201171875`}, {274, 0.14311981201171875`}, {
             275, 0.14311981201171875`}, {276, 0.14311981201171875`}, {
             277, 0.14311981201171875`}, {278, 0.14311981201171875`}, {
             279, 0.14311981201171875`}, {280, 0.14311981201171875`}, {
             281, 0.14311981201171875`}, {282, 0.14311981201171875`}, {
             283, 0.14311981201171875`}, {284, 0.14311981201171875`}, {
             285, 0.14311981201171875`}, {286, 0.14311981201171875`}, {
             287, 0.14311981201171875`}, {288, 0.14311981201171875`}, {
             289, 0.14311981201171875`}, {290, 0.14311981201171875`}, {
             291, 0.14311981201171875`}, {292, 0.14311981201171875`}, {
             293, 0.14311981201171875`}, {294, 0.14311981201171875`}, {
             295, 0.14311981201171875`}, {296, 0.14311981201171875`}, {
             297, 0.14311981201171875`}, {298, 0.14311981201171875`}, {
             299, 0.14311981201171875`}, {300, 0.14311981201171875`}, {
             301, 0.14311981201171875`}, {302, 0.14311981201171875`}, {
             303, 0.14311981201171875`}, {304, 0.14311981201171875`}, {
             305, 0.14311981201171875`}, {306, 0.14311981201171875`}, {
             307, 0.14311981201171875`}, {308, 0.14311981201171875`}, {
             309, 0.14311981201171875`}, {310, 0.14311981201171875`}, {
             311, 0.14311981201171875`}, {312, 0.14311981201171875`}, {
             313, 0.14311981201171875`}, {314, 0.14311981201171875`}, {
             315, 0.14311981201171875`}, {316, 0.14311981201171875`}, {
             317, 0.14311981201171875`}, {318, 0.14311981201171875`}, {
             319, 0.14311981201171875`}, {320, 0.14311981201171875`}, {
             321, 0.14311981201171875`}, {322, 0.14311981201171875`}, {
             323, 0.14311981201171875`}, {324, 0.14311981201171875`}, {
             325, 0.14311981201171875`}, {326, 0.14311981201171875`}, {
             327, 0.14311981201171875`}, {328, 0.14311981201171875`}, {
             329, 0.14311981201171875`}, {330, 0.14311981201171875`}, {
             331, 0.14311981201171875`}, {332, 0.14311981201171875`}, {
             333, 0.14311981201171875`}, {334, 0.14311981201171875`}, {
             335, 0.14311981201171875`}, {336, 0.14311981201171875`}, {
             337, 0.14311981201171875`}, {338, 0.14311981201171875`}, {
             339, 0.14311981201171875`}, {340, 0.14311981201171875`}, {
             341, 0.14311981201171875`}, {342, 0.14311981201171875`}, {
             343, 0.14311981201171875`}, {344, 0.14311981201171875`}, {
             345, 0.14311981201171875`}, {346, 0.14311981201171875`}, {
             347, 0.14311981201171875`}, {348, 0.14311981201171875`}, {
             349, 0.14311981201171875`}, {350, 0.14311981201171875`}, {
             351, 0.14311981201171875`}, {352, 0.14311981201171875`}, {
             353, 0.14311981201171875`}, {354, 0.14311981201171875`}, {
             355, 0.14311981201171875`}, {356, 0.14311981201171875`}, {
             357, 0.14311981201171875`}, {358, 0.14311981201171875`}, {
             359, 0.14311981201171875`}, {360, 0.14311981201171875`}, {
             361, 0.14311981201171875`}, {362, 0.14311981201171875`}, {
             363, 0.14311981201171875`}, {364, 0.14311981201171875`}, {
             365, 0.14311981201171875`}, {366, 0.14311981201171875`}, {
             367, 0.14311981201171875`}, {368, 0.14311981201171875`}, {
             369, 0.14311981201171875`}, {370, 0.14311981201171875`}, {
             371, 0.14311981201171875`}, {372, 0.14311981201171875`}, {
             373, 0.14311981201171875`}, {374, 0.14311981201171875`}, {
             375, 0.14311981201171875`}, {376, 0.14311981201171875`}, {
             377, 0.14311981201171875`}, {378, 0.14311981201171875`}, {
             379, 0.14311981201171875`}, {380, 0.14311981201171875`}, {
             381, 0.14311981201171875`}, {382, 0.14311981201171875`}, {
             383, 0.14311981201171875`}, {384, 0.14311981201171875`}, {
             385, 0.14311981201171875`}, {386, 0.14311981201171875`}, {
             387, 0.14311981201171875`}, {388, 0.14311981201171875`}, {
             389, 0.14311981201171875`}, {390, 0.14311981201171875`}, {
             391, 0.14311981201171875`}, {392, 0.14311981201171875`}, {
             393, 0.14311981201171875`}, {394, 0.14311981201171875`}, {
             395, 0.14311981201171875`}, {396, 0.14311981201171875`}, {
             397, 0.14311981201171875`}, {398, 0.14311981201171875`}, {
             399, 0.14311981201171875`}, {400, 0.14311981201171875`}, {
             401, 0.14311981201171875`}, {402, 0.14311981201171875`}, {
             403, 0.14311981201171875`}, {404, 0.14311981201171875`}, {
             405, 0.14311981201171875`}, {406, 0.14311981201171875`}, {
             407, 0.14311981201171875`}, {408, 0.14311981201171875`}, {
             409, 0.14311981201171875`}, {410, 0.14311981201171875`}, {
             411, 0.14311981201171875`}, {412, 0.14311981201171875`}, {
             413, 0.14311981201171875`}, {414, 0.14311981201171875`}, {
             415, 0.14311981201171875`}, {416, 0.14311981201171875`}, {
             417, 0.14311981201171875`}, {418, 0.14311981201171875`}, {
             419, 0.14311981201171875`}, {420, 0.14311981201171875`}, {
             421, 0.14311981201171875`}, {422, 0.14311981201171875`}, {
             423, 0.14311981201171875`}, {424, 0.14311981201171875`}, {
             425, 0.14311981201171875`}, {426, 0.14311981201171875`}, {
             427, 0.14311981201171875`}, {428, 0.14311981201171875`}, {
             429, 0.14311981201171875`}, {430, 0.14311981201171875`}, {
             431, 0.14311981201171875`}, {432, 0.14311981201171875`}, {
             433, 0.14311981201171875`}, {434, 0.14311981201171875`}, {
             435, 0.14311981201171875`}, {436, 0.14311981201171875`}, {
             437, 0.14311981201171875`}, {438, 0.14311981201171875`}, {
             439, 0.14311981201171875`}, {440, 0.14311981201171875`}, {
             441, 0.14311981201171875`}, {442, 0.14311981201171875`}, {
             443, 0.14311981201171875`}, {444, 0.14311981201171875`}, {
             445, 0.14311981201171875`}, {446, 0.14311981201171875`}, {
             447, 0.14311981201171875`}, {448, 0.14311981201171875`}, {
             449, 0.14311981201171875`}, {450, 0.14311981201171875`}, {
             451, 0.14311981201171875`}, {452, 0.14311981201171875`}, {
             453, 0.14311981201171875`}, {454, 0.14311981201171875`}, {
             455, 0.14311981201171875`}, {456, 0.14311981201171875`}, {
             457, 0.14311981201171875`}, {458, 0.14311981201171875`}, {
             459, 0.14311981201171875`}, {460, 0.14311981201171875`}, {
             461, 0.14311981201171875`}, {462, 0.14311981201171875`}, {
             463, 0.14311981201171875`}, {464, 0.14311981201171875`}, {
             465, 0.14311981201171875`}, {466, 0.14311981201171875`}, {
             467, 0.14311981201171875`}, {468, 0.14311981201171875`}, {
             469, 0.14311981201171875`}, {470, 0.14311981201171875`}, {
             471, 0.14311981201171875`}, {472, 0.14311981201171875`}, {
             473, 0.14311981201171875`}, {474, 0.14311981201171875`}, {
             475, 0.14311981201171875`}, {476, 0.14311981201171875`}, {
             477, 0.14311981201171875`}, {478, 0.14311981201171875`}, {
             479, 0.14311981201171875`}, {480, 0.14311981201171875`}, {
             481, 0.14311981201171875`}, {482, 0.14311981201171875`}, {
             483, 0.14311981201171875`}, {484, 0.14311981201171875`}, {
             485, 0.14311981201171875`}, {486, 0.14311981201171875`}, {
             487, 0.14311981201171875`}, {488, 0.14311981201171875`}, {
             489, 0.14311981201171875`}, {490, 0.14311981201171875`}, {
             491, 0.14311981201171875`}, {492, 0.14311981201171875`}, {
             493, 0.14311981201171875`}, {494, 0.14311981201171875`}, {
             495, 0.14311981201171875`}, {496, 0.14311981201171875`}, {
             497, 0.14311981201171875`}, {498, 0.14311981201171875`}, {
             499, 0.14311981201171875`}, {500, 0.14311981201171875`}, {
             501, 0.14311981201171875`}, {502, 0.1455230712890625}, {
             503, 0.1455230712890625}, {504, 0.1455230712890625}, {
             505, 0.1455230712890625}, {506, 0.14577484130859375`}, {
             507, 0.14578628540039062`}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, 
                    MemoryInUse[$FrontEnd]/1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {95., 98.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[$FrontEnd]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}}, BaselinePosition -> Top, 
       DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TagBox[
      GridBox[{{
         ItemBox[
          
          DynamicModuleBox[{
           MemoryUsagePalette`currentMemory$$ = 
            100 Ramp[1. - 3.526399759302961*^-11 IntegerPart[
                 LibraryFunction[
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\11.2\\SystemFiles\\Links\\SystemTools\\\
LibraryResources\\Windows-x86-64\\libSystemTools.dll", 
                  "getMemoryAvailable", {}, Real][]]], 
            MemoryUsagePalette`initialMemory$$ = 28357533696}, 
           DynamicBox[
            ToBoxes[
            MemoryUsagePalette`currentMemory$$ = 
              MemoryUsagePalette`UsedMemoryFunction[
               MemoryUsagePalette`initialMemory$$]; Panel[
               Row[{
                 HorizontalGauge[
                 MemoryUsagePalette`currentMemory$$, {0, 100}, 
                  ScaleRanges -> {{50, 60}, {60, 70}, {70, 80}, {80, 100}}, 
                  GaugeFrameStyle -> LightGray, GaugeFaceStyle -> 
                  LightOrange], 
                 StringJoin[
                  ToString[
                   Round[MemoryUsagePalette`currentMemory$$]], " %"]}], 
               Style["Free memory used", Bold], Top], StandardForm], 
            ImageSizeCache -> {1334., {46., 65.}}, UpdateInterval -> 1], 
           DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`UsedMemoryFunction[
               Pattern[MemoryUsagePalette`initialMemory, 
                Blank[]]] := If[$VersionNumber < 11.2, 100 N[
                 Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 N[
                 Ramp[
                 1 - MemoryAvailable[]/MemoryUsagePalette`initialMemory]]], 
             MemoryAvailable[] := Refresh[
               IntegerPart[
                SystemTools`Private`getMemoryAvailable[]], UpdateInterval -> 
               1], SystemTools`Private`getMemoryAvailable = 
             LibraryFunction[
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\11.2\\SystemFiles\\Links\\SystemTools\\\
LibraryResources\\Windows-x86-64\\libSystemTools.dll", 
               "getMemoryAvailable", {}, Real]}], Alignment -> Center, 
          StripOnInput -> False]}, {"\"\""}, {
         ItemBox[
          StyleBox[
          "\"Symbol memory usage\"", StripOnInput -> False, FontWeight -> 
           Bold], Alignment -> Center, StripOnInput -> False]}, {
         ItemBox[
          DynamicModuleBox[{MemoryUsagePalette`selection$$ = 4}, 
           PanelBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  StyleBox["\"Context: \"", Bold, StripOnInput -> False], 
                  InterpretationBox[
                   PopupMenuBox[
                    Dynamic[MemoryUsagePalette`selection$$], {
                    1 -> TagBox[
                    "\"DocumentationSearch`\"", {"ResetImageSizeLevel", 2}], 
                    2 -> TagBox[
                    "\"ResourceLocator`\"", {"ResetImageSizeLevel", 2}], 3 -> 
                    TagBox["\"WolframAlphaClient`\"", {
                    "ResetImageSizeLevel", 2}], 4 -> 
                    TagBox["\"Global`\"", {"ResetImageSizeLevel", 2}]}], 
                   
                   PopupView[{
                    "DocumentationSearch`", "ResourceLocator`", 
                    "WolframAlphaClient`", "Global`"}, 
                    Dynamic[MemoryUsagePalette`selection$$]]]}, 
                 "RowDefault"]}, {
                DynamicBox[
                 ToBoxes[
                  MemoryUsagePalette`SymbolMemoryUsage[
                   Part[
                    MemoryUsagePalette`GetContexts[], 
                    MemoryUsagePalette`selection$$]], StandardForm], 
                 ImageSizeCache -> {203., {22., 26.}}]}}, DefaultBaseStyle -> 
              "Column", GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`SymbolMemoryUsage[
               Pattern[MemoryUsagePalette`context, 
                Blank[]]] := DynamicModule[{MemoryUsagePalette`patt}, 
               Dynamic[
               MemoryUsagePalette`patt = 
                 StringJoin[MemoryUsagePalette`context, "*"]; Grid[
                  Join[{{
                    Item[
                    Style["Symbol", Bold, Black], Background -> LightGray, 
                    Alignment -> Center], 
                    Item[
                    Style["Memory (MiB)", Bold, Black], Background -> 
                    LightGray, Alignment -> Center]}}, 
                   If[Length[
                    Names[MemoryUsagePalette`patt]] == 0, {{
                    Item["No symbols defined", Alignment -> Center], 
                    SpanFromLeft}}, 
                    Reverse[
                    SortBy[
                    Transpose[{
                    Names[MemoryUsagePalette`patt], 
                    Map[ByteCount[#]/1024.^2.& , 
                    Map[ToExpression, 
                    Names[MemoryUsagePalette`patt]]]}], Last]]]], Alignment -> 
                  Left, Background -> {{LightYellow}, None}, Frame -> All, 
                  FrameStyle -> Directive[Gray]], UpdateInterval -> 1], 
               SaveDefinitions -> True], MemoryUsagePalette`GetContexts[] := 
             Block[{MemoryUsagePalette`unused}, 
               MemoryUsagePalette`unused = {
                 "CloudObjectLoader`", "IntegratedServicesLoader`", 
                  "StreamingLoader`", "InterpreterLoader`", "IconizeLoader`", 
                  "HTTPHandlingLoader`", "GeneralUtilitiesLoader`", 
                  "AuthenticationLoader`", "SystemTools`", "PacletManager`", 
                  "System`"}; Return[
                 
                 MemoryUsagePalette`DeleteInstances[$ContextPath, 
                  MemoryUsagePalette`unused]]; Null], 
             MemoryUsagePalette`DeleteInstances[
               Pattern[MemoryUsagePalette`expr, 
                Blank[]], 
               Pattern[MemoryUsagePalette`list, 
                Blank[List]]] := Select[MemoryUsagePalette`expr, Not[
                MemberQ[MemoryUsagePalette`list, #]]& ], $ContextPath = {
              "SystemTools`", "DocumentationSearch`", "ResourceLocator`", 
               "WolframAlphaClient`", "CloudObjectLoader`", 
               "InterpreterLoader`", "IntegratedServicesLoader`", 
               "IconizeLoader`", "HTTPHandlingLoader`", 
               "GeneralUtilitiesLoader`", "AuthenticationLoader`", 
               "StreamingLoader`", "PacletManager`", "System`", "Global`"}}], 
          Alignment -> Center, StripOnInput -> False]}}, BaselinePosition -> 
       Top, DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
    "Row",
    DisplayFunction->(PaneBox[
      RowBox[{
        TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
      Baseline]& ),
    InterpretationFunction->(RowBox[{"Row", "[", 
       RowBox[{
         RowBox[{"{", 
           TemplateSlotSequence[1, ","], "}"}], ",", 
         RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )]]}, {
  2,"\<\"Options\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"History length size\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"By default, Mathematica saves all outputs in the \
memory.\\nReducing history length size can improve memory usage.\"\>"},
      {
       TagBox[GridBox[{
          {
           DynamicBox[ToBoxes[
             Button[
             0, $HistoryLength = 0, Background -> 
              If[$HistoryLength == 0, LightYellow, Automatic]], StandardForm],
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             1, $HistoryLength = 1, Background -> 
              If[$HistoryLength == 1, LightYellow, Automatic]], StandardForm],
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             2, $HistoryLength = 2, Background -> 
              If[$HistoryLength == 2, LightYellow, Automatic]], StandardForm],
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             3, $HistoryLength = 3, Background -> 
              If[$HistoryLength == 3, LightYellow, Automatic]], StandardForm],
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
              DirectedInfinity[1], $HistoryLength = DirectedInfinity[1], 
              Background -> 
              If[$HistoryLength == DirectedInfinity[1], LightYellow, 
                Automatic]], StandardForm],
            ImageSizeCache->{17., {9., 14.}}]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}}],
        "Grid"]},
      {"\<\"\"\>"},
      {
       StyleBox["\<\"Memory protection\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Abort kernel if free memory is used up to a specified level.\"\>"},
      {
       DynamicModuleBox[{MemoryUsagePalette`protect$$ = True, 
        MemoryUsagePalette`limit$$ = 10, MemoryUsagePalette`initialMemory$$ = 
        28357545984}, 
        DynamicBox[ToBoxes[Refresh[
            If[MemoryUsagePalette`protect$$, 
             MemoryUsagePalette`MemoryWatchdog[
             MemoryUsagePalette`initialMemory$$, MemoryUsagePalette`limit$$]],
             UpdateInterval -> 1]; Grid[{{"Protect memory: ", 
              Checkbox[
               Dynamic[MemoryUsagePalette`protect$$]]}, {
             "Used memory limit: ", 
              Slider[
               Dynamic[MemoryUsagePalette`limit$$], {10, 100, 1}, Enabled -> 
               MemoryUsagePalette`protect$$], MemoryUsagePalette`limit$$}}, 
            Alignment -> Left], StandardForm],
         ImageSizeCache->{340., {17., 21.}}],
        DynamicModuleValues:>{},
        Initialization:>{MemoryUsagePalette`MemoryWatchdog[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]], 
            Pattern[MemoryUsagePalette`limit, 
             Blank[]]] := 
          Block[{MemoryUsagePalette`currentMemory}, 
            MemoryUsagePalette`currentMemory = 
             MemoryUsagePalette`UsedMemoryFunction[
              MemoryUsagePalette`initialMemory]; 
            If[MemoryUsagePalette`currentMemory > MemoryUsagePalette`limit, 
              Quit[]]; Null], MemoryUsagePalette`UsedMemoryFunction[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]]] := If[$VersionNumber < 11.2, 100 N[
              Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 N[
              Ramp[1 - MemoryAvailable[]/MemoryUsagePalette`initialMemory]]], 
          MemoryAvailable[] := Refresh[
            IntegerPart[
             SystemTools`Private`getMemoryAvailable[]], UpdateInterval -> 1], 
          SystemTools`Private`getMemoryAvailable = 
          LibraryFunction[
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\11.2\\SystemFiles\\Links\\SystemTools\\\
LibraryResources\\Windows-x86-64\\libSystemTools.dll", 
            "getMemoryAvailable", {}, Real]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]]}}, 1]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"4444faa2-3f4c-4682-9feb-da0920a34b41"]
},
WindowSize->All,
WindowMargins->{{Automatic, -1600}, {Automatic, 116}},
WindowElements->{},
WindowTitle->"Memory Monitor",
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 53331, 875, 582, InheritFromParent,ExpressionUUID->"4444faa2-3f4c-4682-9feb-da0920a34b41",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

