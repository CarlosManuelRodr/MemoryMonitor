(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53474,        902]
NotebookOptionsPosition[     53076,        885]
NotebookOutlinePosition[     53461,        902]
CellTagsIndexPosition[     53418,        899]
WindowTitle->Memory Monitor
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 TabViewBox[{{1,"\<\"Memory monitor\"\>"->
  PanelBox[
   TemplateBox[{TagBox[
      GridBox[{{
         ItemBox[
          StyleBox[
          "\"Kernel memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{11, 102.26129913330078`}, {
             12, 102.26129913330078`}, {13, 102.26129913330078`}, {
             14, 102.26129913330078`}, {15, 102.26129913330078`}, {
             16, 102.26129913330078`}, {17, 102.26129913330078`}, {
             18, 102.26129913330078`}, {19, 102.26129913330078`}, {
             20, 102.26129913330078`}, {21, 102.26129913330078`}, {
             22, 102.26129913330078`}, {23, 102.26129913330078`}, {
             24, 102.26129913330078`}, {25, 102.26129913330078`}, {
             26, 102.26129913330078`}, {27, 102.26129913330078`}, {
             28, 102.26129913330078`}, {29, 102.26129913330078`}, {
             30, 102.26129913330078`}, {31, 102.26129913330078`}, {
             32, 102.26129913330078`}, {33, 102.26129913330078`}, {
             34, 102.26129913330078`}, {35, 102.26129913330078`}, {
             36, 102.26129913330078`}, {37, 102.26129913330078`}, {
             38, 102.26129913330078`}, {39, 102.26129913330078`}, {
             40, 102.26129913330078`}, {41, 102.26129913330078`}, {
             42, 102.26129913330078`}, {43, 102.26129913330078`}, {
             44, 102.26129913330078`}, {45, 102.26129913330078`}, {
             46, 102.26129913330078`}, {47, 102.26129913330078`}, {
             48, 102.26129913330078`}, {49, 102.26129913330078`}, {
             50, 102.26129913330078`}, {51, 102.26129913330078`}, {
             52, 102.26129913330078`}, {53, 102.26129913330078`}, {
             54, 102.26129913330078`}, {55, 102.26129913330078`}, {
             56, 102.26129913330078`}, {57, 102.26129913330078`}, {
             58, 102.26129913330078`}, {59, 102.26129913330078`}, {
             60, 102.26129913330078`}, {61, 102.26129913330078`}, {
             62, 102.26129913330078`}, {63, 102.26129913330078`}, {
             64, 102.26129913330078`}, {65, 102.26129913330078`}, {
             66, 102.26129913330078`}, {67, 102.26129913330078`}, {
             68, 102.26129913330078`}, {69, 102.26129913330078`}, {
             70, 102.26129913330078`}, {71, 102.26129913330078`}, {
             72, 102.26129913330078`}, {73, 102.26129913330078`}, {
             74, 102.26129913330078`}, {75, 102.26129913330078`}, {
             76, 102.26129913330078`}, {77, 102.26129913330078`}, {
             78, 102.26129913330078`}, {79, 102.26129913330078`}, {
             80, 102.26129913330078`}, {81, 102.26129913330078`}, {
             82, 102.26129913330078`}, {83, 102.26129913330078`}, {
             84, 102.26129913330078`}, {85, 102.26129913330078`}, {
             86, 102.26129913330078`}, {87, 102.26129913330078`}, {
             88, 102.26129913330078`}, {89, 102.26129913330078`}, {
             90, 102.26129913330078`}, {91, 102.26129913330078`}, {
             92, 102.26129913330078`}, {93, 102.26129913330078`}, {
             94, 102.26129913330078`}, {95, 102.26129913330078`}, {
             96, 102.26129913330078`}, {97, 102.26129913330078`}, {
             98, 102.26129913330078`}, {99, 102.26129913330078`}, {
             100, 102.26129913330078`}, {101, 102.26129913330078`}, {
             102, 102.26129913330078`}, {103, 102.26129913330078`}, {
             104, 102.26129913330078`}, {105, 102.26129913330078`}, {
             106, 102.26129913330078`}, {107, 102.26129913330078`}, {
             108, 102.26129913330078`}, {109, 102.26129913330078`}, {
             110, 102.26129913330078`}, {111, 102.26129913330078`}, {
             112, 102.26129913330078`}, {113, 102.26129913330078`}, {
             114, 102.26129913330078`}, {115, 102.26129913330078`}, {
             116, 102.26129913330078`}, {117, 102.26129913330078`}, {
             118, 102.26129913330078`}, {119, 102.26129913330078`}, {
             120, 102.26129913330078`}, {121, 102.26129913330078`}, {
             122, 102.26129913330078`}, {123, 102.26129913330078`}, {
             124, 102.26129913330078`}, {125, 102.26129913330078`}, {
             126, 102.26129913330078`}, {127, 102.26129913330078`}, {
             128, 102.26129913330078`}, {129, 102.26129913330078`}, {
             130, 102.26129913330078`}, {131, 102.26129913330078`}, {
             132, 102.26129913330078`}, {133, 102.26129913330078`}, {
             134, 102.26129913330078`}, {135, 102.26129913330078`}, {
             136, 102.26129913330078`}, {137, 102.26129913330078`}, {
             138, 102.26129913330078`}, {139, 102.26129913330078`}, {
             140, 102.26129913330078`}, {141, 102.26129913330078`}, {
             142, 102.26129913330078`}, {143, 102.26129913330078`}, {
             144, 102.26129913330078`}, {145, 102.26129913330078`}, {
             146, 102.26129913330078`}, {147, 102.26129913330078`}, {
             148, 102.26129913330078`}, {149, 102.26129913330078`}, {
             150, 102.26129913330078`}, {151, 102.26129913330078`}, {
             152, 102.26129913330078`}, {153, 102.26129913330078`}, {
             154, 102.26129913330078`}, {155, 102.26129913330078`}, {
             156, 102.26129913330078`}, {157, 102.26129913330078`}, {
             158, 102.26129913330078`}, {159, 102.26129913330078`}, {
             160, 102.26129913330078`}, {161, 102.26129913330078`}, {
             162, 102.26129913330078`}, {163, 102.26129913330078`}, {
             164, 102.26129913330078`}, {165, 102.26129913330078`}, {
             166, 102.26129913330078`}, {167, 102.26129913330078`}, {
             168, 102.26129913330078`}, {169, 102.26129913330078`}, {
             170, 102.26129913330078`}, {171, 102.26129913330078`}, {
             172, 102.26129913330078`}, {173, 102.26129913330078`}, {
             174, 102.26129913330078`}, {175, 102.26129913330078`}, {
             176, 102.26129913330078`}, {177, 102.26129913330078`}, {
             178, 102.26129913330078`}, {179, 102.26129913330078`}, {
             180, 102.26129913330078`}, {181, 102.26129913330078`}, {
             182, 102.26129913330078`}, {183, 102.26129913330078`}, {
             184, 102.26129913330078`}, {185, 102.26129913330078`}, {
             186, 102.26129913330078`}, {187, 102.26129913330078`}, {
             188, 102.26129913330078`}, {189, 102.26129913330078`}, {
             190, 102.26129913330078`}, {191, 102.26129913330078`}, {
             192, 102.26129913330078`}, {193, 102.26129913330078`}, {
             194, 102.26129913330078`}, {195, 102.26129913330078`}, {
             196, 102.26129913330078`}, {197, 102.26129913330078`}, {
             198, 102.26129913330078`}, {199, 102.26129913330078`}, {
             200, 102.26129913330078`}, {201, 102.26129913330078`}, {
             202, 102.26129913330078`}, {203, 102.26129913330078`}, {
             204, 102.26129913330078`}, {205, 102.26129913330078`}, {
             206, 102.26129913330078`}, {207, 102.26129913330078`}, {
             208, 102.26129913330078`}, {209, 102.26129913330078`}, {
             210, 102.26129913330078`}, {211, 102.26129913330078`}, {
             212, 102.26129913330078`}, {213, 102.26129913330078`}, {
             214, 102.26129913330078`}, {215, 102.26129913330078`}, {
             216, 102.26129913330078`}, {217, 102.26129913330078`}, {
             218, 102.26129913330078`}, {219, 102.26129913330078`}, {
             220, 102.26129913330078`}, {221, 102.26129913330078`}, {
             222, 102.26129913330078`}, {223, 102.26129913330078`}, {
             224, 102.26129913330078`}, {225, 102.26129913330078`}, {
             226, 102.26129913330078`}, {227, 102.26129913330078`}, {
             228, 102.26129913330078`}, {229, 102.26129913330078`}, {
             230, 102.26129913330078`}, {231, 102.26129913330078`}, {
             232, 102.26129913330078`}, {233, 102.26129913330078`}, {
             234, 102.26129913330078`}, {235, 102.26129913330078`}, {
             236, 102.26129913330078`}, {237, 102.26129913330078`}, {
             238, 102.26129913330078`}, {239, 102.26129913330078`}, {
             240, 102.26129913330078`}, {241, 102.26129913330078`}, {
             242, 102.26129913330078`}, {243, 102.26129913330078`}, {
             244, 102.26129913330078`}, {245, 102.26129913330078`}, {
             246, 102.26129913330078`}, {247, 102.26129913330078`}, {
             248, 102.26129913330078`}, {249, 102.26129913330078`}, {
             250, 102.26129913330078`}, {251, 102.26129913330078`}, {
             252, 102.26129913330078`}, {253, 102.26129913330078`}, {
             254, 102.26129913330078`}, {255, 102.26129913330078`}, {
             256, 102.26129913330078`}, {257, 102.26129913330078`}, {
             258, 102.26129913330078`}, {259, 102.26129913330078`}, {
             260, 102.26129913330078`}, {261, 102.26129913330078`}, {
             262, 102.26129913330078`}, {263, 102.26129913330078`}, {
             264, 102.26129913330078`}, {265, 102.26129913330078`}, {
             266, 102.26129913330078`}, {267, 102.26129913330078`}, {
             268, 102.26129913330078`}, {269, 102.26129913330078`}, {
             270, 102.26129913330078`}, {271, 102.26129913330078`}, {
             272, 102.26129913330078`}, {273, 102.26129913330078`}, {
             274, 102.26129913330078`}, {275, 102.26129913330078`}, {
             276, 102.26129913330078`}, {277, 102.26129913330078`}, {
             278, 102.26129913330078`}, {279, 102.26129913330078`}, {
             280, 102.26129913330078`}, {281, 102.26129913330078`}, {
             282, 102.26129913330078`}, {283, 102.26129913330078`}, {
             284, 102.26129913330078`}, {285, 102.26129913330078`}, {
             286, 102.26129913330078`}, {287, 102.26129913330078`}, {
             288, 102.26129913330078`}, {289, 102.26129913330078`}, {
             290, 102.26129913330078`}, {291, 102.26129913330078`}, {
             292, 102.26129913330078`}, {293, 102.26129913330078`}, {
             294, 102.26129913330078`}, {295, 102.26129913330078`}, {
             296, 102.26129913330078`}, {297, 102.26129913330078`}, {
             298, 102.26129913330078`}, {299, 102.26129913330078`}, {
             300, 102.26129913330078`}, {301, 102.26129913330078`}, {
             302, 102.26129913330078`}, {303, 102.26129913330078`}, {
             304, 102.26129913330078`}, {305, 102.26129913330078`}, {
             306, 102.26129913330078`}, {307, 102.26129913330078`}, {
             308, 102.26129913330078`}, {309, 102.26129913330078`}, {
             310, 102.26129913330078`}, {311, 102.26129913330078`}, {
             312, 102.26129913330078`}, {313, 102.26129913330078`}, {
             314, 102.26129913330078`}, {315, 102.26129913330078`}, {
             316, 102.26129913330078`}, {317, 102.26129913330078`}, {
             318, 102.26129913330078`}, {319, 102.26129913330078`}, {
             320, 102.26129913330078`}, {321, 102.26129913330078`}, {
             322, 102.26129913330078`}, {323, 102.26129913330078`}, {
             324, 102.26129913330078`}, {325, 102.26129913330078`}, {
             326, 102.26129913330078`}, {327, 102.26129913330078`}, {
             328, 102.26129913330078`}, {329, 102.26129913330078`}, {
             330, 102.26129913330078`}, {331, 102.26129913330078`}, {
             332, 102.26129913330078`}, {333, 102.26129913330078`}, {
             334, 102.26129913330078`}, {335, 102.26129913330078`}, {
             336, 102.26129913330078`}, {337, 102.26129913330078`}, {
             338, 102.26129913330078`}, {339, 102.26129913330078`}, {
             340, 102.26129913330078`}, {341, 102.26129913330078`}, {
             342, 102.26129913330078`}, {343, 102.26129913330078`}, {
             344, 102.26129913330078`}, {345, 102.26129913330078`}, {
             346, 102.26129913330078`}, {347, 102.26129913330078`}, {
             348, 102.26129913330078`}, {349, 102.26129913330078`}, {
             350, 102.26129913330078`}, {351, 102.26129913330078`}, {
             352, 102.26129913330078`}, {353, 102.26129913330078`}, {
             354, 102.26129913330078`}, {355, 102.26129913330078`}, {
             356, 102.26129913330078`}, {357, 102.26129913330078`}, {
             358, 102.26129913330078`}, {359, 102.26129913330078`}, {
             360, 102.26129913330078`}, {361, 102.26129913330078`}, {
             362, 102.26129913330078`}, {363, 102.26129913330078`}, {
             364, 102.26129913330078`}, {365, 102.26129913330078`}, {
             366, 102.26129913330078`}, {367, 102.26129913330078`}, {
             368, 102.26129913330078`}, {369, 102.26129913330078`}, {
             370, 102.26129913330078`}, {371, 102.26129913330078`}, {
             372, 102.26129913330078`}, {373, 102.26129913330078`}, {
             374, 102.26129913330078`}, {375, 102.26129913330078`}, {
             376, 102.26129913330078`}, {377, 102.26129913330078`}, {
             378, 102.26129913330078`}, {379, 102.26129913330078`}, {
             380, 102.26129913330078`}, {381, 102.26129913330078`}, {
             382, 102.26129913330078`}, {383, 102.26129913330078`}, {
             384, 102.26129913330078`}, {385, 102.26129913330078`}, {
             386, 102.26129913330078`}, {387, 102.26129913330078`}, {
             388, 102.26129913330078`}, {389, 102.26129913330078`}, {
             390, 102.26129913330078`}, {391, 102.26129913330078`}, {
             392, 102.26129913330078`}, {393, 102.26129913330078`}, {
             394, 102.26129913330078`}, {395, 102.26129913330078`}, {
             396, 102.26129913330078`}, {397, 102.26129913330078`}, {
             398, 102.26129913330078`}, {399, 102.26129913330078`}, {
             400, 102.26129913330078`}, {401, 102.26129913330078`}, {
             402, 102.26129913330078`}, {403, 102.26129913330078`}, {
             404, 102.26129913330078`}, {405, 102.26129913330078`}, {
             406, 102.26129913330078`}, {407, 102.26129913330078`}, {
             408, 102.26129913330078`}, {409, 102.26129913330078`}, {
             410, 102.26129913330078`}, {411, 102.26129913330078`}, {
             412, 102.26129913330078`}, {413, 102.26129913330078`}, {
             414, 102.26129913330078`}, {415, 102.26129913330078`}, {
             416, 102.26129913330078`}, {417, 102.26129913330078`}, {
             418, 102.26129913330078`}, {419, 102.26129913330078`}, {
             420, 102.26129913330078`}, {421, 102.26129913330078`}, {
             422, 102.26129913330078`}, {423, 102.26129913330078`}, {
             424, 102.26129913330078`}, {425, 102.26129913330078`}, {
             426, 102.26129913330078`}, {427, 102.26129913330078`}, {
             428, 102.26129913330078`}, {429, 102.26129913330078`}, {
             430, 102.26129913330078`}, {431, 102.26129913330078`}, {
             432, 102.26129913330078`}, {433, 102.26129913330078`}, {
             434, 102.26129913330078`}, {435, 102.26129913330078`}, {
             436, 102.26129913330078`}, {437, 102.26129913330078`}, {
             438, 102.26129913330078`}, {439, 102.26129913330078`}, {
             440, 102.26129913330078`}, {441, 102.26129913330078`}, {
             442, 102.26129913330078`}, {443, 102.26129913330078`}, {
             444, 102.26129913330078`}, {445, 102.26129913330078`}, {
             446, 102.26129913330078`}, {447, 102.26129913330078`}, {
             448, 102.26129913330078`}, {449, 102.26129913330078`}, {
             450, 102.26129913330078`}, {451, 102.26129913330078`}, {
             452, 102.26129913330078`}, {453, 102.26129913330078`}, {
             454, 102.26129913330078`}, {455, 102.26129913330078`}, {
             456, 102.26129913330078`}, {457, 102.26129913330078`}, {
             458, 102.26129913330078`}, {459, 102.26129913330078`}, {
             460, 102.26129913330078`}, {461, 102.26129913330078`}, {
             462, 102.26129913330078`}, {463, 102.26129913330078`}, {
             464, 102.26129913330078`}, {465, 102.26129913330078`}, {
             466, 102.26129913330078`}, {467, 102.26129913330078`}, {
             468, 102.26129913330078`}, {469, 102.26129913330078`}, {
             470, 102.26129913330078`}, {471, 102.26129913330078`}, {
             472, 102.26129913330078`}, {473, 102.26129913330078`}, {
             474, 102.26129913330078`}, {475, 102.26129913330078`}, {
             476, 102.26129913330078`}, {477, 102.26129913330078`}, {
             478, 102.26129913330078`}, {479, 102.26129913330078`}, {
             480, 102.26129913330078`}, {481, 102.26129913330078`}, {
             482, 102.26129913330078`}, {483, 102.26129913330078`}, {
             484, 102.26129913330078`}, {485, 102.26129913330078`}, {
             486, 102.26129913330078`}, {487, 102.26129913330078`}, {
             488, 102.26129913330078`}, {489, 102.26129913330078`}, {
             490, 102.26129913330078`}, {491, 102.26129913330078`}, {
             492, 102.26129913330078`}, {493, 102.26129913330078`}, {
             494, 102.26129913330078`}, {495, 102.26129913330078`}, {
             496, 102.26129913330078`}, {497, 102.26129913330078`}, {
             498, 102.26129913330078`}, {499, 102.26129913330078`}, {
             500, 102.26129913330078`}, {501, 103.24805450439453`}, {
             502, 152.72555541992188`}, {503, 152.79190826416016`}, {
             504, 152.7973861694336}, {505, 152.79727172851562`}, {
             506, 152.80313873291016`}, {507, 152.82679748535156`}, {
             508, 152.8329620361328}, {509, 152.81090545654297`}, {
             510, 152.84392547607422`}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, MemoryInUse[]/
                    1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {96., 99.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}, {"\"\""}, {
         ItemBox[
          StyleBox[
          "\"Frontend memory\"", StripOnInput -> False, FontWeight -> Bold], 
          Alignment -> Center, StripOnInput -> False]}, {
         DynamicModuleBox[{
          MemoryUsagePalette`miu$$ = {{11, 0.14463424682617188`}, {
             12, 0.14463424682617188`}, {13, 0.14463424682617188`}, {
             14, 0.14463424682617188`}, {15, 0.14463424682617188`}, {
             16, 0.14463424682617188`}, {17, 0.14463424682617188`}, {
             18, 0.14463424682617188`}, {19, 0.14463424682617188`}, {
             20, 0.14463424682617188`}, {21, 0.14463424682617188`}, {
             22, 0.14463424682617188`}, {23, 0.14463424682617188`}, {
             24, 0.14463424682617188`}, {25, 0.14463424682617188`}, {
             26, 0.14463424682617188`}, {27, 0.14463424682617188`}, {
             28, 0.14463424682617188`}, {29, 0.14463424682617188`}, {
             30, 0.14463424682617188`}, {31, 0.14463424682617188`}, {
             32, 0.14463424682617188`}, {33, 0.14463424682617188`}, {
             34, 0.14463424682617188`}, {35, 0.14463424682617188`}, {
             36, 0.14463424682617188`}, {37, 0.14463424682617188`}, {
             38, 0.14463424682617188`}, {39, 0.14463424682617188`}, {
             40, 0.14463424682617188`}, {41, 0.14463424682617188`}, {
             42, 0.14463424682617188`}, {43, 0.14463424682617188`}, {
             44, 0.14463424682617188`}, {45, 0.14463424682617188`}, {
             46, 0.14463424682617188`}, {47, 0.14463424682617188`}, {
             48, 0.14463424682617188`}, {49, 0.14463424682617188`}, {
             50, 0.14463424682617188`}, {51, 0.14463424682617188`}, {
             52, 0.14463424682617188`}, {53, 0.14463424682617188`}, {
             54, 0.14463424682617188`}, {55, 0.14463424682617188`}, {
             56, 0.14463424682617188`}, {57, 0.14463424682617188`}, {
             58, 0.14463424682617188`}, {59, 0.14463424682617188`}, {
             60, 0.14463424682617188`}, {61, 0.14463424682617188`}, {
             62, 0.14463424682617188`}, {63, 0.14463424682617188`}, {
             64, 0.14463424682617188`}, {65, 0.14463424682617188`}, {
             66, 0.14463424682617188`}, {67, 0.14463424682617188`}, {
             68, 0.14463424682617188`}, {69, 0.14463424682617188`}, {
             70, 0.14463424682617188`}, {71, 0.14463424682617188`}, {
             72, 0.14463424682617188`}, {73, 0.14463424682617188`}, {
             74, 0.14463424682617188`}, {75, 0.14463424682617188`}, {
             76, 0.14463424682617188`}, {77, 0.14463424682617188`}, {
             78, 0.14463424682617188`}, {79, 0.14463424682617188`}, {
             80, 0.14463424682617188`}, {81, 0.14463424682617188`}, {
             82, 0.14463424682617188`}, {83, 0.14463424682617188`}, {
             84, 0.14463424682617188`}, {85, 0.14463424682617188`}, {
             86, 0.14463424682617188`}, {87, 0.14463424682617188`}, {
             88, 0.14463424682617188`}, {89, 0.14463424682617188`}, {
             90, 0.14463424682617188`}, {91, 0.14463424682617188`}, {
             92, 0.14463424682617188`}, {93, 0.14463424682617188`}, {
             94, 0.14463424682617188`}, {95, 0.14463424682617188`}, {
             96, 0.14463424682617188`}, {97, 0.14463424682617188`}, {
             98, 0.14463424682617188`}, {99, 0.14463424682617188`}, {
             100, 0.14463424682617188`}, {101, 0.14463424682617188`}, {
             102, 0.14463424682617188`}, {103, 0.14463424682617188`}, {
             104, 0.14463424682617188`}, {105, 0.14463424682617188`}, {
             106, 0.14463424682617188`}, {107, 0.14463424682617188`}, {
             108, 0.14463424682617188`}, {109, 0.14463424682617188`}, {
             110, 0.14463424682617188`}, {111, 0.14463424682617188`}, {
             112, 0.14463424682617188`}, {113, 0.14463424682617188`}, {
             114, 0.14463424682617188`}, {115, 0.14463424682617188`}, {
             116, 0.14463424682617188`}, {117, 0.14463424682617188`}, {
             118, 0.14463424682617188`}, {119, 0.14463424682617188`}, {
             120, 0.14463424682617188`}, {121, 0.14463424682617188`}, {
             122, 0.14463424682617188`}, {123, 0.14463424682617188`}, {
             124, 0.14463424682617188`}, {125, 0.14463424682617188`}, {
             126, 0.14463424682617188`}, {127, 0.14463424682617188`}, {
             128, 0.14463424682617188`}, {129, 0.14463424682617188`}, {
             130, 0.14463424682617188`}, {131, 0.14463424682617188`}, {
             132, 0.14463424682617188`}, {133, 0.14463424682617188`}, {
             134, 0.14463424682617188`}, {135, 0.14463424682617188`}, {
             136, 0.14463424682617188`}, {137, 0.14463424682617188`}, {
             138, 0.14463424682617188`}, {139, 0.14463424682617188`}, {
             140, 0.14463424682617188`}, {141, 0.14463424682617188`}, {
             142, 0.14463424682617188`}, {143, 0.14463424682617188`}, {
             144, 0.14463424682617188`}, {145, 0.14463424682617188`}, {
             146, 0.14463424682617188`}, {147, 0.14463424682617188`}, {
             148, 0.14463424682617188`}, {149, 0.14463424682617188`}, {
             150, 0.14463424682617188`}, {151, 0.14463424682617188`}, {
             152, 0.14463424682617188`}, {153, 0.14463424682617188`}, {
             154, 0.14463424682617188`}, {155, 0.14463424682617188`}, {
             156, 0.14463424682617188`}, {157, 0.14463424682617188`}, {
             158, 0.14463424682617188`}, {159, 0.14463424682617188`}, {
             160, 0.14463424682617188`}, {161, 0.14463424682617188`}, {
             162, 0.14463424682617188`}, {163, 0.14463424682617188`}, {
             164, 0.14463424682617188`}, {165, 0.14463424682617188`}, {
             166, 0.14463424682617188`}, {167, 0.14463424682617188`}, {
             168, 0.14463424682617188`}, {169, 0.14463424682617188`}, {
             170, 0.14463424682617188`}, {171, 0.14463424682617188`}, {
             172, 0.14463424682617188`}, {173, 0.14463424682617188`}, {
             174, 0.14463424682617188`}, {175, 0.14463424682617188`}, {
             176, 0.14463424682617188`}, {177, 0.14463424682617188`}, {
             178, 0.14463424682617188`}, {179, 0.14463424682617188`}, {
             180, 0.14463424682617188`}, {181, 0.14463424682617188`}, {
             182, 0.14463424682617188`}, {183, 0.14463424682617188`}, {
             184, 0.14463424682617188`}, {185, 0.14463424682617188`}, {
             186, 0.14463424682617188`}, {187, 0.14463424682617188`}, {
             188, 0.14463424682617188`}, {189, 0.14463424682617188`}, {
             190, 0.14463424682617188`}, {191, 0.14463424682617188`}, {
             192, 0.14463424682617188`}, {193, 0.14463424682617188`}, {
             194, 0.14463424682617188`}, {195, 0.14463424682617188`}, {
             196, 0.14463424682617188`}, {197, 0.14463424682617188`}, {
             198, 0.14463424682617188`}, {199, 0.14463424682617188`}, {
             200, 0.14463424682617188`}, {201, 0.14463424682617188`}, {
             202, 0.14463424682617188`}, {203, 0.14463424682617188`}, {
             204, 0.14463424682617188`}, {205, 0.14463424682617188`}, {
             206, 0.14463424682617188`}, {207, 0.14463424682617188`}, {
             208, 0.14463424682617188`}, {209, 0.14463424682617188`}, {
             210, 0.14463424682617188`}, {211, 0.14463424682617188`}, {
             212, 0.14463424682617188`}, {213, 0.14463424682617188`}, {
             214, 0.14463424682617188`}, {215, 0.14463424682617188`}, {
             216, 0.14463424682617188`}, {217, 0.14463424682617188`}, {
             218, 0.14463424682617188`}, {219, 0.14463424682617188`}, {
             220, 0.14463424682617188`}, {221, 0.14463424682617188`}, {
             222, 0.14463424682617188`}, {223, 0.14463424682617188`}, {
             224, 0.14463424682617188`}, {225, 0.14463424682617188`}, {
             226, 0.14463424682617188`}, {227, 0.14463424682617188`}, {
             228, 0.14463424682617188`}, {229, 0.14463424682617188`}, {
             230, 0.14463424682617188`}, {231, 0.14463424682617188`}, {
             232, 0.14463424682617188`}, {233, 0.14463424682617188`}, {
             234, 0.14463424682617188`}, {235, 0.14463424682617188`}, {
             236, 0.14463424682617188`}, {237, 0.14463424682617188`}, {
             238, 0.14463424682617188`}, {239, 0.14463424682617188`}, {
             240, 0.14463424682617188`}, {241, 0.14463424682617188`}, {
             242, 0.14463424682617188`}, {243, 0.14463424682617188`}, {
             244, 0.14463424682617188`}, {245, 0.14463424682617188`}, {
             246, 0.14463424682617188`}, {247, 0.14463424682617188`}, {
             248, 0.14463424682617188`}, {249, 0.14463424682617188`}, {
             250, 0.14463424682617188`}, {251, 0.14463424682617188`}, {
             252, 0.14463424682617188`}, {253, 0.14463424682617188`}, {
             254, 0.14463424682617188`}, {255, 0.14463424682617188`}, {
             256, 0.14463424682617188`}, {257, 0.14463424682617188`}, {
             258, 0.14463424682617188`}, {259, 0.14463424682617188`}, {
             260, 0.14463424682617188`}, {261, 0.14463424682617188`}, {
             262, 0.14463424682617188`}, {263, 0.14463424682617188`}, {
             264, 0.14463424682617188`}, {265, 0.14463424682617188`}, {
             266, 0.14463424682617188`}, {267, 0.14463424682617188`}, {
             268, 0.14463424682617188`}, {269, 0.14463424682617188`}, {
             270, 0.14463424682617188`}, {271, 0.14463424682617188`}, {
             272, 0.14463424682617188`}, {273, 0.14463424682617188`}, {
             274, 0.14463424682617188`}, {275, 0.14463424682617188`}, {
             276, 0.14463424682617188`}, {277, 0.14463424682617188`}, {
             278, 0.14463424682617188`}, {279, 0.14463424682617188`}, {
             280, 0.14463424682617188`}, {281, 0.14463424682617188`}, {
             282, 0.14463424682617188`}, {283, 0.14463424682617188`}, {
             284, 0.14463424682617188`}, {285, 0.14463424682617188`}, {
             286, 0.14463424682617188`}, {287, 0.14463424682617188`}, {
             288, 0.14463424682617188`}, {289, 0.14463424682617188`}, {
             290, 0.14463424682617188`}, {291, 0.14463424682617188`}, {
             292, 0.14463424682617188`}, {293, 0.14463424682617188`}, {
             294, 0.14463424682617188`}, {295, 0.14463424682617188`}, {
             296, 0.14463424682617188`}, {297, 0.14463424682617188`}, {
             298, 0.14463424682617188`}, {299, 0.14463424682617188`}, {
             300, 0.14463424682617188`}, {301, 0.14463424682617188`}, {
             302, 0.14463424682617188`}, {303, 0.14463424682617188`}, {
             304, 0.14463424682617188`}, {305, 0.14463424682617188`}, {
             306, 0.14463424682617188`}, {307, 0.14463424682617188`}, {
             308, 0.14463424682617188`}, {309, 0.14463424682617188`}, {
             310, 0.14463424682617188`}, {311, 0.14463424682617188`}, {
             312, 0.14463424682617188`}, {313, 0.14463424682617188`}, {
             314, 0.14463424682617188`}, {315, 0.14463424682617188`}, {
             316, 0.14463424682617188`}, {317, 0.14463424682617188`}, {
             318, 0.14463424682617188`}, {319, 0.14463424682617188`}, {
             320, 0.14463424682617188`}, {321, 0.14463424682617188`}, {
             322, 0.14463424682617188`}, {323, 0.14463424682617188`}, {
             324, 0.14463424682617188`}, {325, 0.14463424682617188`}, {
             326, 0.14463424682617188`}, {327, 0.14463424682617188`}, {
             328, 0.14463424682617188`}, {329, 0.14463424682617188`}, {
             330, 0.14463424682617188`}, {331, 0.14463424682617188`}, {
             332, 0.14463424682617188`}, {333, 0.14463424682617188`}, {
             334, 0.14463424682617188`}, {335, 0.14463424682617188`}, {
             336, 0.14463424682617188`}, {337, 0.14463424682617188`}, {
             338, 0.14463424682617188`}, {339, 0.14463424682617188`}, {
             340, 0.14463424682617188`}, {341, 0.14463424682617188`}, {
             342, 0.14463424682617188`}, {343, 0.14463424682617188`}, {
             344, 0.14463424682617188`}, {345, 0.14463424682617188`}, {
             346, 0.14463424682617188`}, {347, 0.14463424682617188`}, {
             348, 0.14463424682617188`}, {349, 0.14463424682617188`}, {
             350, 0.14463424682617188`}, {351, 0.14463424682617188`}, {
             352, 0.14463424682617188`}, {353, 0.14463424682617188`}, {
             354, 0.14463424682617188`}, {355, 0.14463424682617188`}, {
             356, 0.14463424682617188`}, {357, 0.14463424682617188`}, {
             358, 0.14463424682617188`}, {359, 0.14463424682617188`}, {
             360, 0.14463424682617188`}, {361, 0.14463424682617188`}, {
             362, 0.14463424682617188`}, {363, 0.14463424682617188`}, {
             364, 0.14463424682617188`}, {365, 0.14463424682617188`}, {
             366, 0.14463424682617188`}, {367, 0.14463424682617188`}, {
             368, 0.14463424682617188`}, {369, 0.14463424682617188`}, {
             370, 0.14463424682617188`}, {371, 0.14463424682617188`}, {
             372, 0.14463424682617188`}, {373, 0.14463424682617188`}, {
             374, 0.14463424682617188`}, {375, 0.14463424682617188`}, {
             376, 0.14463424682617188`}, {377, 0.14463424682617188`}, {
             378, 0.14463424682617188`}, {379, 0.14463424682617188`}, {
             380, 0.14463424682617188`}, {381, 0.14463424682617188`}, {
             382, 0.14463424682617188`}, {383, 0.14463424682617188`}, {
             384, 0.14463424682617188`}, {385, 0.14463424682617188`}, {
             386, 0.14463424682617188`}, {387, 0.14463424682617188`}, {
             388, 0.14463424682617188`}, {389, 0.14463424682617188`}, {
             390, 0.14463424682617188`}, {391, 0.14463424682617188`}, {
             392, 0.14463424682617188`}, {393, 0.14463424682617188`}, {
             394, 0.14463424682617188`}, {395, 0.14463424682617188`}, {
             396, 0.14463424682617188`}, {397, 0.14463424682617188`}, {
             398, 0.14463424682617188`}, {399, 0.14463424682617188`}, {
             400, 0.14463424682617188`}, {401, 0.14463424682617188`}, {
             402, 0.14463424682617188`}, {403, 0.14463424682617188`}, {
             404, 0.14463424682617188`}, {405, 0.14463424682617188`}, {
             406, 0.14463424682617188`}, {407, 0.14463424682617188`}, {
             408, 0.14463424682617188`}, {409, 0.14463424682617188`}, {
             410, 0.14463424682617188`}, {411, 0.14463424682617188`}, {
             412, 0.14463424682617188`}, {413, 0.14463424682617188`}, {
             414, 0.14463424682617188`}, {415, 0.14463424682617188`}, {
             416, 0.14463424682617188`}, {417, 0.14463424682617188`}, {
             418, 0.14463424682617188`}, {419, 0.14463424682617188`}, {
             420, 0.14463424682617188`}, {421, 0.14463424682617188`}, {
             422, 0.14463424682617188`}, {423, 0.14463424682617188`}, {
             424, 0.14463424682617188`}, {425, 0.14463424682617188`}, {
             426, 0.14463424682617188`}, {427, 0.14463424682617188`}, {
             428, 0.14463424682617188`}, {429, 0.14463424682617188`}, {
             430, 0.14463424682617188`}, {431, 0.14463424682617188`}, {
             432, 0.14463424682617188`}, {433, 0.14463424682617188`}, {
             434, 0.14463424682617188`}, {435, 0.14463424682617188`}, {
             436, 0.14463424682617188`}, {437, 0.14463424682617188`}, {
             438, 0.14463424682617188`}, {439, 0.14463424682617188`}, {
             440, 0.14463424682617188`}, {441, 0.14463424682617188`}, {
             442, 0.14463424682617188`}, {443, 0.14463424682617188`}, {
             444, 0.14463424682617188`}, {445, 0.14463424682617188`}, {
             446, 0.14463424682617188`}, {447, 0.14463424682617188`}, {
             448, 0.14463424682617188`}, {449, 0.14463424682617188`}, {
             450, 0.14463424682617188`}, {451, 0.14463424682617188`}, {
             452, 0.14463424682617188`}, {453, 0.14463424682617188`}, {
             454, 0.14463424682617188`}, {455, 0.14463424682617188`}, {
             456, 0.14463424682617188`}, {457, 0.14463424682617188`}, {
             458, 0.14463424682617188`}, {459, 0.14463424682617188`}, {
             460, 0.14463424682617188`}, {461, 0.14463424682617188`}, {
             462, 0.14463424682617188`}, {463, 0.14463424682617188`}, {
             464, 0.14463424682617188`}, {465, 0.14463424682617188`}, {
             466, 0.14463424682617188`}, {467, 0.14463424682617188`}, {
             468, 0.14463424682617188`}, {469, 0.14463424682617188`}, {
             470, 0.14463424682617188`}, {471, 0.14463424682617188`}, {
             472, 0.14463424682617188`}, {473, 0.14463424682617188`}, {
             474, 0.14463424682617188`}, {475, 0.14463424682617188`}, {
             476, 0.14463424682617188`}, {477, 0.14463424682617188`}, {
             478, 0.14463424682617188`}, {479, 0.14463424682617188`}, {
             480, 0.14463424682617188`}, {481, 0.14463424682617188`}, {
             482, 0.14463424682617188`}, {483, 0.14463424682617188`}, {
             484, 0.14463424682617188`}, {485, 0.14463424682617188`}, {
             486, 0.14463424682617188`}, {487, 0.14463424682617188`}, {
             488, 0.14463424682617188`}, {489, 0.14463424682617188`}, {
             490, 0.14463424682617188`}, {491, 0.14463424682617188`}, {
             492, 0.14463424682617188`}, {493, 0.14463424682617188`}, {
             494, 0.14463424682617188`}, {495, 0.14463424682617188`}, {
             496, 0.14463424682617188`}, {497, 0.14463424682617188`}, {
             498, 0.14463424682617188`}, {499, 0.14463424682617188`}, {
             500, 0.14463424682617188`}, {501, 0.14463424682617188`}, {
             502, 0.14463424682617188`}, {503, 0.14463424682617188`}, {
             504, 0.14463424682617188`}, {505, 0.14463424682617188`}, {
             506, 0.14463424682617188`}, {507, 0.14469528198242188`}, {
             508, 0.14469528198242188`}, {509, 0.14469528198242188`}, {
             510, 0.14494705200195312`}}}, 
          PanelBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 DynamicBox[
                  ToBoxes[
                   Style[
                    Part[MemoryUsagePalette`miu$$, -1, 2], Bold, 
                    ColorData["HTML"]["FireBrick"]], StandardForm], 
                  TrackedSymbols :> {MemoryUsagePalette`miu$$}], 
                 StyleBox[
                 "\"Memory used [MiB]: \"", Bold, StripOnInput -> False]}, 
                "Labeled", DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 2}]& ), 
                InterpretationFunction -> (RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2, ",", "Left"}], "]"}]& )], ""}, {
               DynamicBox[
                ToBoxes[
                 ListLinePlot[MemoryUsagePalette`miu$$ = Append[
                    Drop[MemoryUsagePalette`miu$$, 1], {First[
                    Last[MemoryUsagePalette`miu$$]] + 1, 
                    MemoryInUse[$FrontEnd]/1024.^2.}], Frame -> True, 
                  FrameTicks -> {{None, All}, {True, None}}, ImageSize -> 300,
                   FrameLabel -> {"Time", "Memory (MiB)"}, PlotTheme -> 
                  "Monochrome", PlotRange -> {All, {0, All}}, PlotMarkers -> 
                  None, PlotStyle -> Red, GridLines -> Automatic], 
                 StandardForm], ImageSizeCache -> {300., {95., 98.}}, 
                Initialization :> (MemoryUsagePalette`miu$$ = Transpose[{
                    Range[500], 
                    ConstantArray[MemoryInUse[$FrontEnd]/1024.^2., 500]}]), 
                TrackedSymbols :> {}, UpdateInterval -> 1], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]],
           DynamicModuleValues :> {}]}}, BaselinePosition -> Top, 
       DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TagBox[
      GridBox[{{
         ItemBox[
          
          DynamicModuleBox[{
           MemoryUsagePalette`currentMemory$$ = 0.17710371381820111`, 
            MemoryUsagePalette`initialMemory$$ = 30186262528}, 
           DynamicBox[
            ToBoxes[
            MemoryUsagePalette`currentMemory$$ = 
              MemoryUsagePalette`UsedMemoryFunction[
               MemoryUsagePalette`initialMemory$$]; Panel[
               Row[{
                 HorizontalGauge[
                 MemoryUsagePalette`currentMemory$$, {0, 100}, 
                  ScaleRanges -> {{50, 60}, {60, 70}, {70, 80}, {80, 100}}, 
                  GaugeFrameStyle -> LightGray, GaugeFaceStyle -> 
                  LightOrange], 
                 StringJoin[
                  ToString[
                   Round[MemoryUsagePalette`currentMemory$$]], " %"]}], 
               Style["Free memory used", Bold], Top], StandardForm], 
            ImageSizeCache -> {220., {35., 54.}}, UpdateInterval -> 1], 
           DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`UsedMemoryFunction[
               Pattern[MemoryUsagePalette`initialMemory, 
                Blank[]]] := If[$VersionNumber < 11.2, 100 N[
                 Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 
               N[
                 Ramp[
                 1 - MemoryAvailable[]/MemoryUsagePalette`initialMemory]]], 
             MemoryAvailable[] := Refresh[
               IntegerPart[
                SystemTools`Private`getMemoryAvailable[]], UpdateInterval -> 
               1], SystemTools`Private`getMemoryAvailable = 
             LibraryFunction[
              "/opt/Mathematica/SystemFiles/Links/SystemTools/\
LibraryResources/Linux-x86-64/libSystemTools.so", "getMemoryAvailable", {}, 
               Real]}], Alignment -> Center, StripOnInput -> False]}, {
        "\"\""}, {
         ItemBox[
          StyleBox[
          "\"Symbol memory usage\"", StripOnInput -> False, FontWeight -> 
           Bold], Alignment -> Center, StripOnInput -> False]}, {
         ItemBox[
          DynamicModuleBox[{MemoryUsagePalette`selection$$ = 1}, 
           PanelBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  StyleBox["\"Context: \"", Bold, StripOnInput -> False], 
                  InterpretationBox[
                   PopupMenuBox[
                    Dynamic[MemoryUsagePalette`selection$$], {
                    1 -> TagBox["\"Global`\"", {"ResetImageSizeLevel", 2}]}], 
                   
                   PopupView[{"Global`"}, 
                    Dynamic[MemoryUsagePalette`selection$$]]]}, 
                 "RowDefault"]}, {
                DynamicBox[
                 ToBoxes[
                  MemoryUsagePalette`SymbolMemoryUsage[
                   Part[
                    MemoryUsagePalette`GetContexts[], 
                    MemoryUsagePalette`selection$$]], StandardForm], 
                 ImageSizeCache -> {203., {22., 26.}}]}}, DefaultBaseStyle -> 
              "Column", GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], DynamicModuleValues :> {}, 
           Initialization :> {MemoryUsagePalette`SymbolMemoryUsage[
               Pattern[MemoryUsagePalette`context, 
                Blank[]]] := DynamicModule[{MemoryUsagePalette`patt}, 
               Dynamic[
               MemoryUsagePalette`patt = 
                 StringJoin[MemoryUsagePalette`context, "*"]; Grid[
                  Join[{{
                    Item[
                    Style["Symbol", Bold, Black], Background -> LightGray, 
                    Alignment -> Center], 
                    Item[
                    Style["Memory (MiB)", Bold, Black], Background -> 
                    LightGray, Alignment -> Center]}}, 
                   If[Length[
                    Names[MemoryUsagePalette`patt]] == 0, {{
                    Item["No symbols defined", Alignment -> Center], 
                    SpanFromLeft}}, 
                    Reverse[
                    SortBy[
                    Transpose[{
                    Names[MemoryUsagePalette`patt], 
                    Map[ByteCount[#]/1024.^2.& , 
                    Map[ToExpression, 
                    Names[MemoryUsagePalette`patt]]]}], Last]]]], Alignment -> 
                  Left, Background -> {{LightYellow}, None}, Frame -> All, 
                  FrameStyle -> Directive[Gray]], UpdateInterval -> 1], 
               SaveDefinitions -> True], MemoryUsagePalette`GetContexts[] := 
             Block[{MemoryUsagePalette`unused}, 
               MemoryUsagePalette`unused = {
                 "CloudObjectLoader`", "IntegratedServicesLoader`", 
                  "StreamingLoader`", "InterpreterLoader`", "IconizeLoader`", 
                  "HTTPHandlingLoader`", "GeneralUtilitiesLoader`", 
                  "AuthenticationLoader`", "SystemTools`", "PacletManager`", 
                  "System`"}; Return[
                 
                 MemoryUsagePalette`DeleteInstances[$ContextPath, 
                  MemoryUsagePalette`unused]]; Null], 
             MemoryUsagePalette`DeleteInstances[
               Pattern[MemoryUsagePalette`expr, 
                Blank[]], 
               Pattern[MemoryUsagePalette`list, 
                Blank[List]]] := Select[MemoryUsagePalette`expr, Not[
                MemberQ[MemoryUsagePalette`list, #]]& ], $ContextPath = {
              "SystemTools`", "CloudObjectLoader`", 
               "IntegratedServicesLoader`", "StreamingLoader`", 
               "InterpreterLoader`", "IconizeLoader`", "HTTPHandlingLoader`", 
               "GeneralUtilitiesLoader`", "AuthenticationLoader`", 
               "PacletManager`", "System`", "Global`"}}], Alignment -> Center,
           StripOnInput -> False]}}, BaselinePosition -> Top, 
       DefaultBaseStyle -> "Column", 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
    "Row",
    DisplayFunction->(PaneBox[
      RowBox[{
        TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
      Baseline]& ),
    InterpretationFunction->(RowBox[{"Row", "[", 
       RowBox[{
         RowBox[{"{", 
           TemplateSlotSequence[1, ","], "}"}], ",", 
         RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )]]}, {
  2,"\<\"Options\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"History length size\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"By default, Mathematica saves all outputs in the \
memory.\\nReducing history length size can improve memory usage.\"\>"},
      {
       TagBox[GridBox[{
          {
           DynamicBox[ToBoxes[
             Button[
             0, $HistoryLength = 0, Background -> 
              If[$HistoryLength == 0, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             1, $HistoryLength = 1, Background -> 
              If[$HistoryLength == 1, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             2, $HistoryLength = 2, Background -> 
              If[$HistoryLength == 2, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
             3, $HistoryLength = 3, Background -> 
              If[$HistoryLength == 3, LightYellow, Automatic]], StandardForm],
            
            ImageSizeCache->{15., {9., 14.}}], 
           DynamicBox[ToBoxes[
             Button[
              DirectedInfinity[1], $HistoryLength = DirectedInfinity[1], 
              Background -> 
              If[$HistoryLength == DirectedInfinity[1], LightYellow, 
                Automatic]], StandardForm],
            ImageSizeCache->{17., {9., 14.}}]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}}],
        "Grid"]},
      {"\<\"\"\>"},
      {
       StyleBox["\<\"Memory protection\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Abort kernel if free memory is used up to a specified level.\"\>"},
      {
       DynamicModuleBox[{MemoryUsagePalette`protect$$ = False, 
        MemoryUsagePalette`limit$$ = 80, MemoryUsagePalette`initialMemory$$ = 
        30186262528}, 
        DynamicBox[ToBoxes[Refresh[
            If[MemoryUsagePalette`protect$$, 
             MemoryUsagePalette`MemoryWatchdog[
             MemoryUsagePalette`initialMemory$$, MemoryUsagePalette`limit$$]],
             UpdateInterval -> 1]; Grid[{{"Protect memory: ", 
              Checkbox[
               Dynamic[MemoryUsagePalette`protect$$]]}, {
             "Used memory limit: ", 
              Slider[
               Dynamic[MemoryUsagePalette`limit$$], {10, 100, 1}, Enabled -> 
               MemoryUsagePalette`protect$$], MemoryUsagePalette`limit$$}}, 
            Alignment -> Left], StandardForm],
         ImageSizeCache->{340., {17., 21.}}],
        DynamicModuleValues:>{},
        Initialization:>{MemoryUsagePalette`MemoryWatchdog[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]], 
            Pattern[MemoryUsagePalette`limit, 
             Blank[]]] := 
          Block[{MemoryUsagePalette`currentMemory}, 
            MemoryUsagePalette`currentMemory = 
             MemoryUsagePalette`UsedMemoryFunction[
              MemoryUsagePalette`initialMemory]; 
            If[MemoryUsagePalette`currentMemory > MemoryUsagePalette`limit, 
              Quit[]]; Null], MemoryUsagePalette`UsedMemoryFunction[
            Pattern[MemoryUsagePalette`initialMemory, 
             Blank[]]] := If[$VersionNumber < 11.2, 100 N[
              Ramp[MemoryInUse[]/MemoryUsagePalette`initialMemory]], 100 N[
              Ramp[1 - MemoryAvailable[]/MemoryUsagePalette`initialMemory]]], 
          MemoryAvailable[] := Refresh[
            IntegerPart[
             SystemTools`Private`getMemoryAvailable[]], UpdateInterval -> 1], 
          SystemTools`Private`getMemoryAvailable = 
          LibraryFunction[
           "/opt/Mathematica/SystemFiles/Links/SystemTools/LibraryResources/\
Linux-x86-64/libSystemTools.so", "getMemoryAvailable", {}, Real]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]]}}, 1]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"ab24a78d-35de-4536-86db-970373114479"]
},
WindowSize->All,
WindowMargins->{{Automatic, 471}, {Automatic, 128}},
WindowElements->{},
WindowTitle->"Memory Monitor",
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 52485, 862, 582, InheritFromParent,ExpressionUUID->"ab24a78d-35de-4536-86db-970373114479",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

